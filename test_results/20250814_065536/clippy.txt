    Checking cfg-if v1.0.1
    Checking subtle v2.6.1
    Checking bytes v1.10.1
    Checking smallvec v1.15.1
    Checking once_cell v1.21.3
    Checking itoa v1.0.15
    Checking pin-project-lite v0.2.16
    Checking libc v0.2.175
    Checking typenum v1.18.0
    Checking zeroize v1.8.1
    Checking const-oid v0.9.6
    Checking serde v1.0.219
    Checking log v0.4.27
    Checking fnv v1.0.7
    Checking futures-core v0.3.31
    Checking memchr v2.7.5
    Checking scopeguard v1.2.0
    Checking futures-sink v0.3.31
    Checking futures-task v0.3.31
    Checking futures-io v0.3.31
    Checking slab v0.4.11
    Checking lock_api v0.4.13
    Checking futures-channel v0.3.31
    Checking pin-utils v0.1.0
    Checking zerofrom v0.1.6
    Checking zerocopy v0.8.26
    Checking cpufeatures v0.2.17
    Checking stable_deref_trait v1.2.0
    Checking tracing-core v0.1.34
    Checking allocator-api2 v0.2.21
    Checking yoke v0.8.0
    Checking httparse v1.10.1
    Checking litemap v0.8.0
    Checking http v0.2.12
    Checking zerovec v0.11.4
    Checking writeable v0.6.1
    Checking generic-array v0.14.7
    Checking futures-util v0.3.31
    Checking tower-service v0.3.3
    Checking zerotrie v0.2.2
    Checking base64ct v1.8.0
    Checking tracing v0.1.41
    Checking getrandom v0.2.16
    Checking parking_lot_core v0.9.11
   Compiling jobserver v0.1.33
    Checking rand_core v0.6.4
    Checking socket2 v0.6.0
    Checking mio v1.0.4
    Checking signal-hook-registry v1.4.6
    Checking parking_lot v0.12.4
    Checking foldhash v0.1.5
   Compiling cc v1.2.32
    Checking tap v1.0.1
    Checking equivalent v1.0.2
    Checking thiserror v1.0.69
    Checking wyz v0.5.1
    Checking hashbrown v0.15.5
    Checking crypto-common v0.1.6
    Checking block-buffer v0.10.4
    Checking radium v0.7.0
    Checking tokio v1.47.1
    Checking funty v2.0.0
    Checking icu_properties_data v2.0.1
    Checking digest v0.10.7
    Checking icu_normalizer_data v2.0.0
    Checking percent-encoding v2.3.1
    Checking byteorder v1.5.0
    Checking pem-rfc7468 v0.7.0
    Checking form_urlencoded v1.2.1
    Checking hmac v0.12.1
    Checking tinystr v0.8.1
    Checking potential_utf v0.1.2
    Checking bitflags v2.9.1
    Checking httpdate v1.0.3
    Checking der v0.7.10
    Checking icu_collections v2.0.0
    Checking icu_locale_core v2.0.0
    Checking crossbeam-utils v0.8.21
    Checking bitvec v1.0.1
    Checking block-padding v0.3.3
    Checking indexmap v2.10.0
    Checking mime v0.3.17
    Checking ryu v1.0.20
    Checking ppv-lite86 v0.2.21
    Checking utf8_iter v1.0.4
    Checking inout v0.1.4
    Checking sha1 v0.10.6
    Checking http-body v0.4.6
    Checking cipher v0.4.4
    Checking try-lock v0.2.5
    Checking base16ct v0.2.0
    Checking icu_provider v2.0.0
    Checking rand_chacha v0.3.1
    Checking untrusted v0.9.0
    Checking want v0.3.1
    Checking getrandom v0.1.16
    Checking crossbeam-epoch v0.9.18
    Checking hkdf v0.12.4
    Checking crypto-bigint v0.5.5
    Checking digest v0.9.0
    Checking socket2 v0.5.10
    Checking rand v0.8.5
    Checking serde_json v1.0.142
    Checking spki v0.7.3
    Checking icu_normalizer v2.0.0
    Checking icu_properties v2.0.1
    Checking opaque-debug v0.3.1
    Checking pkcs8 v0.10.2
    Checking foreign-types-shared v0.1.1
    Checking foreign-types v0.3.2
    Checking rand_core v0.5.1
    Checking sec1 v0.7.3
    Checking ahash v0.8.12
    Checking sha2 v0.10.9
    Checking base64 v0.21.7
    Checking lazy_static v1.5.0
    Checking num-traits v0.2.19
    Checking crossbeam-deque v0.8.6
   Compiling openssl-sys v0.9.109
   Compiling ring v0.17.14
   Compiling secp256k1-sys v0.9.2
    Checking serde_urlencoded v0.7.1
    Checking rfc6979 v0.4.0
    Checking signature v2.2.0
    Checking universal-hash v0.5.1
    Checking openssl-probe v0.1.6
    Checking polyval v0.6.2
   Compiling clang-sys v1.8.1
   Compiling libfuzzer-sys v0.4.10
    Checking getrandom v0.3.3
    Checking hashbrown v0.14.5
    Checking rand_chacha v0.2.2
    Checking ff v0.13.1
    Checking block-buffer v0.9.0
    Checking group v0.13.0
    Checking encoding_rs v0.8.35
   Compiling derive_arbitrary v1.4.1
    Checking idna_adapter v1.2.1
   Compiling openssl v0.10.73
   Compiling native-tls v0.2.14
    Checking signature v1.6.4
    Checking idna v1.0.3
    Checking ed25519 v1.5.3
    Checking sha2 v0.9.9
    Checking elliptic-curve v0.13.8
    Checking url v2.5.4
    Checking rand v0.7.3
    Checking num-integer v0.1.46
    Checking ecdsa v0.16.9
    Checking primeorder v0.13.6
    Checking ghash v0.5.1
    Checking rayon-core v1.12.1
    Checking futures-executor v0.3.31
    Checking arbitrary v1.4.1
    Checking curve25519-dalek v3.2.0
    Checking neo-config v0.3.0 (/home/ubuntu/neo-rs/crates/config)
    Checking aes v0.8.4
    Checking ctr v0.9.2
    Checking aead v0.5.2
    Checking sync_wrapper v0.1.2
    Checking keccak v0.1.5
    Checking hex v0.4.3
    Checking either v1.15.0
    Checking sha3 v0.10.8
    Checking aes-gcm v0.10.3
    Checking p256 v0.13.2
    Checking rayon v1.10.0
    Checking futures v0.3.31
    Checking ed25519-dalek v1.0.1
    Checking num-bigint v0.4.6
    Checking protobuf v2.28.0
    Checking tokio-util v0.7.16
    Checking rustls-pemfile v1.0.4
    Checking lru v0.12.5
    Checking ripemd v0.1.3
    Checking blake2 v0.10.6
    Checking webpki-roots v0.25.4
    Checking iana-time-zone v0.1.63
    Checking md5 v0.7.0
    Checking ipnet v2.11.0
    Checking h2 v0.3.27
    Checking bs58 v0.5.1
   Compiling bindgen v0.71.1
    Checking chrono v0.4.41
    Checking neo-io v0.3.0 (/home/ubuntu/neo-rs/crates/io)
    Checking uuid v1.18.0
   Compiling lz4-sys v1.11.1+lz4-1.10.0
   Compiling bzip2-sys v0.1.13+1.0.8
   Compiling libz-sys v1.1.22
    Checking sysinfo v0.29.11
   Compiling bindgen v0.65.1
    Checking prometheus v0.13.4
    Checking secp256k1 v0.28.2
    Checking http v1.3.1
    Checking tokio-native-tls v0.3.1
   Compiling parking_lot_core v0.8.6
    Checking instant v0.1.13
    Checking utf-8 v0.7.6
    Checking data-encoding v2.9.0
    Checking regex-syntax v0.8.5
    Checking regex-syntax v0.6.29
    Checking tower-layer v0.3.3
   Compiling rustls v0.21.12
    Checking crc32fast v1.5.0
   Compiling blake3 v1.8.2
    Checking overload v0.1.1
    Checking nu-ansi-term v0.46.0
    Checking parking_lot v0.11.2
    Checking sharded-slab v0.1.7
    Checking tracing-serde v0.2.0
    Checking crossbeam-channel v0.5.15
    Checking regex-automata v0.4.9
    Checking crossbeam-queue v0.3.12
    Checking fxhash v0.2.1
    Checking fs2 v0.4.3
    Checking tracing-log v0.2.0
    Checking thread_local v1.1.9
    Checking arrayvec v0.7.6
    Checking constant_time_eq v0.3.1
    Checking arrayref v0.3.9
    Checking rustls-webpki v0.101.7
    Checking sct v0.7.1
    Checking twox-hash v2.1.1
    Checking regex-automata v0.1.10
    Checking metrics v0.21.1
    Checking pin-project v1.1.10
    Checking hyper v0.14.32
    Checking lz4_flex v0.11.5
    Checking sled v0.34.7
    Checking crossbeam v0.8.4
    Checking dashmap v5.5.3
    Checking bincode v1.3.3
    Checking linux-raw-sys v0.9.4
    Checking xxhash-rust v0.8.15
    Checking matchers v0.1.0
    Checking anyhow v1.0.99
    Checking unicase v2.8.1
    Checking anstyle v1.0.11
    Checking fastrand v2.3.0
    Checking rustix v1.0.8
    Checking unicode-width v0.2.1
    Checking http-body v1.0.1
    Checking utf8parse v0.2.2
    Checking tungstenite v0.20.1
    Checking serde_path_to_error v0.1.17
    Checking regex v1.11.1
    Checking anstyle-parse v0.2.7
    Checking salsa20 v0.10.2
    Checking pbkdf2 v0.12.2
    Checking tracing-subscriber v0.3.19
    Checking password-hash v0.5.0
    Checking anstyle-query v1.1.4
    Checking colorchoice v1.0.4
    Checking is_terminal_polyfill v1.70.1
    Checking matchit v0.7.3
    Checking anstream v0.6.20
    Checking scrypt v0.11.0
    Checking tokio-tungstenite v0.20.1
    Checking axum-core v0.3.4
    Checking tower v0.4.13
    Checking neo-json v0.3.0 (/home/ubuntu/neo-rs/crates/json)
    Checking serde_spanned v0.6.9
    Checking toml_datetime v0.6.11
    Checking cbc v0.1.2
    Checking tokio-rustls v0.24.1
    Checking winnow v0.7.12
    Checking strsim v0.11.1
    Checking bitflags v1.3.2
    Checking toml_write v0.1.2
    Checking http-range-header v0.3.1
    Checking clap_lex v0.7.5
   Compiling mime_guess v2.0.5
    Checking tempfile v3.20.0
    Checking tower-http v0.4.4
    Checking http-body-util v0.1.3
    Checking clap_builder v4.5.44
    Checking tungstenite v0.21.0
    Checking pairing v0.23.0
    Checking headers-core v0.2.0
    Checking spin v0.9.8
    Checking sync_wrapper v1.0.2
    Checking multer v2.1.0
    Checking headers v0.3.9
    Checking tokio-tungstenite v0.21.0
    Checking bls12_381 v0.8.0
    Checking console v0.15.11
   Compiling zstd-sys v2.0.15+zstd.1.5.7
    Checking hyper v1.6.0
    Checking predicates-core v1.0.9
    Checking option-ext v0.2.0
    Checking scoped-tls v1.0.1
    Checking dirs-sys v0.4.1
    Checking axum-core v0.4.5
    Checking tower v0.5.2
    Checking portable-atomic v1.11.1
    Checking k256 v0.13.4
    Checking toml_edit v0.22.27
   Compiling librocksdb-sys v0.11.0+8.1.1
    Checking rtoolbox v0.0.3
    Checking hyper-rustls v0.24.2
    Checking hyper-tls v0.5.0
    Checking axum v0.6.20
    Checking hyper-util v0.1.16
    Checking warp v0.3.7
    Checking number_prefix v0.4.0
    Checking clap v4.5.44
    Checking reqwest v0.11.27
    Checking termtree v0.5.1
    Checking adler2 v2.0.1
    Checking shell-words v1.1.0
    Checking miniz_oxide v0.8.9
    Checking predicates-tree v1.0.12
    Checking dialoguer v0.11.0
    Checking indicatif v0.17.11
    Checking rpassword v7.4.0
    Checking dirs v5.0.1
    Checking predicates v3.1.3
    Checking tower-http v0.5.2
    Checking libloading v0.8.8
    Checking downcast v0.11.0
    Checking base64 v0.22.1
    Checking fragile v2.0.1
    Checking inventory v0.3.20
    Checking flate2 v1.1.2
    Checking mockall v0.12.1
    Checking num_cpus v1.17.0
    Checking neo-bls12-381 v0.3.0 (/home/ubuntu/neo-rs/crates/bls12_381)
    Checking toml v0.8.23
    Checking axum v0.7.9
    Checking neo-cryptography v0.3.0 (/home/ubuntu/neo-rs/crates/cryptography)
    Checking neo-core v0.3.0 (/home/ubuntu/neo-rs/crates/core)
    Checking lz4 v1.28.1
warning: method `as_ref` can be confused for the standard trait method `std::convert::AsRef::as_ref`
  --> crates/core/src/migration_helpers.rs:64:5
   |
64 | /     pub fn as_ref(&self) -> &T {
65 | |         &self.inner
66 | |     }
   | |_____^
   |
   = help: consider implementing the trait `std::convert::AsRef` or choosing a less ambiguous method name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait
   = note: `-W clippy::should-implement-trait` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::should_implement_trait)]`

warning: method `as_mut` can be confused for the standard trait method `std::convert::AsMut::as_mut`
  --> crates/core/src/migration_helpers.rs:69:5
   |
69 | /     pub fn as_mut(&mut self) -> &mut T {
70 | |         &mut self.inner
71 | |     }
   | |_____^
   |
   = help: consider implementing the trait `std::convert::AsMut` or choosing a less ambiguous method name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait

warning: you should consider adding a `Default` implementation for `SystemMonitor`
  --> crates/core/src/system_monitoring.rs:39:5
   |
39 | /     pub fn new() -> Self {
40 | |         Self {
41 | |             transactions: TransactionMetrics::new(),
42 | |             blocks: BlockMetrics::new(),
...  |
50 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
   = note: `-W clippy::new-without-default` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::new_without_default)]`
help: try adding this
   |
34 + impl Default for SystemMonitor {
35 +     fn default() -> Self {
36 +         Self::new()
37 +     }
38 + }
   |

warning: you should consider adding a `Default` implementation for `TransactionMetrics`
   --> crates/core/src/system_monitoring.rs:105:5
    |
105 | /     pub fn new() -> Self {
106 | |         Self {
107 | |             total_count: AtomicU64::new(0),
108 | |             verified_count: AtomicU64::new(0),
...   |
114 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
101 + impl Default for TransactionMetrics {
102 +     fn default() -> Self {
103 +         Self::new()
104 +     }
105 + }
    |

warning: you should consider adding a `Default` implementation for `BlockMetrics`
   --> crates/core/src/system_monitoring.rs:186:5
    |
186 | /     pub fn new() -> Self {
187 | |         Self {
188 | |             total_count: AtomicU64::new(0),
189 | |             current_height: AtomicU64::new(0),
...   |
195 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
182 + impl Default for BlockMetrics {
183 +     fn default() -> Self {
184 +         Self::new()
185 +     }
186 + }
    |

warning: you should consider adding a `Default` implementation for `NetworkMetrics`
   --> crates/core/src/system_monitoring.rs:275:5
    |
275 | /     pub fn new() -> Self {
276 | |         Self {
277 | |             peer_count: AtomicUsize::new(0),
278 | |             messages_sent: AtomicU64::new(0),
...   |
285 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
271 + impl Default for NetworkMetrics {
272 +     fn default() -> Self {
273 +         Self::new()
274 +     }
275 + }
    |

warning: you should consider adding a `Default` implementation for `VmMetrics`
   --> crates/core/src/system_monitoring.rs:374:5
    |
374 | /     pub fn new() -> Self {
375 | |         Self {
376 | |             executions: AtomicU64::new(0),
377 | |             successful_executions: AtomicU64::new(0),
...   |
383 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
370 + impl Default for VmMetrics {
371 +     fn default() -> Self {
372 +         Self::new()
373 +     }
374 + }
    |

warning: you should consider adding a `Default` implementation for `ConsensusMetrics`
   --> crates/core/src/system_monitoring.rs:450:5
    |
450 | /     pub fn new() -> Self {
451 | |         Self {
452 | |             view_changes: AtomicU64::new(0),
453 | |             blocks_proposed: AtomicU64::new(0),
...   |
459 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
446 + impl Default for ConsensusMetrics {
447 +     fn default() -> Self {
448 +         Self::new()
449 +     }
450 + }
    |

warning: you should consider adding a `Default` implementation for `StorageMetrics`
   --> crates/core/src/system_monitoring.rs:540:5
    |
540 | /     pub fn new() -> Self {
541 | |         Self {
542 | |             reads: AtomicU64::new(0),
543 | |             writes: AtomicU64::new(0),
...   |
551 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
536 + impl Default for StorageMetrics {
537 +     fn default() -> Self {
538 +         Self::new()
539 +     }
540 + }
    |

warning: you should consider adding a `Default` implementation for `ErrorTracker`
   --> crates/core/src/system_monitoring.rs:645:5
    |
645 | /     pub fn new() -> Self {
646 | |         Self {
647 | |             errors_by_category: Arc::new(RwLock::new(HashMap::new())),
648 | |             total_errors: AtomicU64::new(0),
...   |
652 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
641 + impl Default for ErrorTracker {
642 +     fn default() -> Self {
643 +         Self::new()
644 +     }
645 + }
    |

warning: you should consider adding a `Default` implementation for `PerformanceTracker`
   --> crates/core/src/system_monitoring.rs:711:5
    |
711 | /     pub fn new() -> Self {
712 | |         Self {
713 | |             cpu_usage_percent: AtomicU64::new(0),
714 | |             memory_usage_bytes: AtomicU64::new(0),
...   |
719 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
707 + impl Default for PerformanceTracker {
708 +     fn default() -> Self {
709 +         Self::new()
710 +     }
711 + }
    |

warning: very complex type used. Consider factoring parts into `type` definitions
   --> crates/core/src/monitoring/performance.rs:170:22
    |
170 |     alert_callbacks: Arc<RwLock<Vec<Box<dyn Fn(PerformanceAlert) + Send + Sync>>>>,
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
    = note: `-W clippy::type-complexity` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::type_complexity)]`

warning: you should consider adding a `Default` implementation for `PerformanceMonitor`
   --> crates/core/src/monitoring/performance.rs:224:5
    |
224 | /     pub fn new() -> Self {
225 | |         Self {
226 | |             metrics: Arc::new(RwLock::new(HashMap::new())),
227 | |             thresholds: Arc::new(RwLock::new(HashMap::new())),
...   |
230 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
222 + impl Default for PerformanceMonitor {
223 +     fn default() -> Self {
224 +         Self::new()
225 +     }
226 + }
    |

warning: missing documentation for a method
   --> crates/core/src/error_handling.rs:296:5
    |
296 | /     pub async fn retry<F, Fut, T>(&self, mut f: F) -> Result<T>
297 | |     where
298 | |         F: FnMut() -> Fut,
299 | |         Fut: std::future::Future<Output = Result<T>>,
    | |_____________________________________________________^
    |
note: the lint level is defined here
   --> crates/core/src/lib.rs:45:9
    |
45  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/core/src/error_handling.rs:355:5
    |
355 | /     pub async fn call<F, Fut, T>(&self, f: F) -> Result<T>
356 | |     where
357 | |         F: FnOnce() -> Fut,
358 | |         Fut: std::future::Future<Output = Result<T>>,
    | |_____________________________________________________^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:803:5
    |
803 |     pub total_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:804:5
    |
804 |     pub verified_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:805:5
    |
805 |     pub failed_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:806:5
    |
806 |     pub total_size_bytes: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:807:5
    |
807 |     pub average_verification_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:808:5
    |
808 |     pub mempool_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:815:5
    |
815 |     pub total_count: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:816:5
    |
816 |     pub current_height: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:817:5
    |
817 |     pub average_block_time_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:818:5
    |
818 |     pub average_block_size_bytes: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:819:5
    |
819 |     pub average_tx_per_block: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:826:5
    |
826 |     pub peer_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:827:5
    |
827 |     pub messages_sent: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:828:5
    |
828 |     pub messages_received: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:829:5
    |
829 |     pub bytes_sent: u64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:830:5
    |
830 |     pub bytes_received: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:831:5
    |
831 |     pub connection_failures: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:832:5
    |
832 |     pub average_latency_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:839:5
    |
839 |     pub executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:840:5
    |
840 |     pub successful_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:841:5
    |
841 |     pub failed_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:842:5
    |
842 |     pub total_gas_consumed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:843:5
    |
843 |     pub average_execution_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:844:5
    |
844 |     pub opcodes_executed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:851:5
    |
851 |     pub view_changes: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:852:5
    |
852 |     pub blocks_proposed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:853:5
    |
853 |     pub blocks_accepted: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:854:5
    |
854 |     pub blocks_rejected: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:855:5
    |
855 |     pub average_consensus_time_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:856:5
    |
856 |     pub timeouts: u64,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:863:5
    |
863 |     pub reads: u64,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:864:5
    |
864 |     pub writes: u64,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:865:5
    |
865 |     pub deletes: u64,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:866:5
    |
866 |     pub cache_hits: u64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:867:5
    |
867 |     pub cache_misses: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:868:5
    |
868 |     pub disk_usage_bytes: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:869:5
    |
869 |     pub average_read_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:870:5
    |
870 |     pub average_write_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:877:5
    |
877 |     pub errors_by_category: HashMap<String, u64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:878:5
    |
878 |     pub total_errors: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:879:5
    |
879 |     pub critical_errors: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:880:5
    |
880 |     pub warnings: u64,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:887:5
    |
887 |     pub cpu_usage_percent: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:888:5
    |
888 |     pub memory_usage_bytes: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:889:5
    |
889 |     pub thread_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:890:5
    |
890 |     pub gc_collections: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/system_monitoring.rs:891:5
    |
891 |     pub gc_pause_time_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> crates/core/src/system_monitoring.rs:895:1
    |
895 | / lazy_static::lazy_static! {
896 | |     pub static ref SYSTEM_MONITOR: SystemMonitor = SystemMonitor::new();
897 | | }
    | |_^
    |
    = note: this warning originates in the macro `lazy_static::lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: missing documentation for a struct
   --> crates/core/src/metrics.rs:13:1
    |
13  | / lazy_static! {
14  | |     pub static ref REGISTRY: RwLock<Registry> = RwLock::new(Registry::new());
...   |
128 | |     ).expect("metric can be created");
129 | | }
    | |_^
    |
    = note: this warning originates in the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: missing documentation for a struct field
   --> crates/core/src/shutdown.rs:115:9
    |
115 |         error: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/core/src/shutdown.rs:128:9
    |
128 |         error: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:49:15
   |
49 |     Boolean { value: bool },
   |               ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:51:11
   |
51 |     Not { condition: Box<WitnessCondition> },
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:53:11
   |
53 |     And { conditions: Vec<WitnessCondition> },
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:55:10
   |
55 |     Or { conditions: Vec<WitnessCondition> },
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:57:18
   |
57 |     ScriptHash { hash: crate::UInt160 },
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:59:13
   |
59 |     Group { group: Vec<u8> }, // ECPoint serialized as bytes (matches C# ECPoint exactly)
   |             ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:63:24
   |
63 |     CalledByContract { hash: crate::UInt160 },
   |                        ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/witness_rule.rs:65:21
   |
65 |     CalledByGroup { group: Vec<u8> }, // ECPoint serialized as bytes (matches C# ECPoint exactly)
   |                     ^^^^^^^^^^^^^^

warning: `neo-core` (lib) generated 98 warnings (24 duplicates) (run `cargo clippy --fix --lib -p neo-core` to apply 10 suggestions)
    Checking neo-vm v0.3.0 (/home/ubuntu/neo-rs/crates/vm)
warning: unused doc comment
   --> crates/vm/src/memory_pool.rs:253:1
    |
253 | /// Thread-local storage for memory pools
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
    |
    = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion
    = note: `#[warn(unused_doc_comments)]` on by default

warning: unused import: `crate::execution_context::ExecutionContext`
  --> crates/vm/src/memory_pool.rs:10:5
   |
10 | use crate::execution_context::ExecutionContext;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `VmError` and `VmResult`
 --> crates/vm/src/safe_type_conversion.rs:6:13
  |
6 | use crate::{VmResult, VmError};
  |             ^^^^^^^^  ^^^^^^^

warning: unused imports: `OracleResponseCode`, `UInt256`, and `WitnessScope`
 --> crates/vm/src/safe_type_conversion.rs:7:77
  |
7 | use neo_core::{Signer as CoreSigner, TransactionAttribute as CoreAttribute, OracleResponseCode, UInt256, WitnessScope};
  |                                                                             ^^^^^^^^^^^^^^^^^^  ^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `std::convert::TryFrom`
 --> crates/vm/src/safe_type_conversion.rs:8:5
  |
8 | use std::convert::TryFrom;
  |     ^^^^^^^^^^^^^^^^^^^^^

    Checking neo-wallets v0.3.0 (/home/ubuntu/neo-rs/crates/wallets)
    Checking neo-rpc-client v0.3.0 (/home/ubuntu/neo-rs/crates/rpc_client)
warning: unused import: `std::collections::HashMap`
  --> crates/wallets/src/wallet.rs:15:5
   |
15 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::path::Path`
  --> crates/wallets/src/wallet.rs:16:5
   |
16 | use std::path::Path;
   |     ^^^^^^^^^^^^^^^

warning: unused imports: `Signer` and `UInt256`
 --> crates/wallets/src/wallet_account.rs:8:16
  |
8 | use neo_core::{Signer, Transaction, UInt160, UInt256, Witness};
  |                ^^^^^^                        ^^^^^^^

warning: unused import: `std::sync::Arc`
 --> crates/wallets/src/wallet_account.rs:9:5
  |
9 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, `info`, and `warn`
  --> crates/wallets/src/wallet_factory.rs:11:11
   |
11 | use log::{debug, error, info, warn};
   |           ^^^^^  ^^^^^  ^^^^  ^^^^

warning: unused import: `UInt256`
  --> crates/wallets/src/lib.rs:30:25
   |
30 | use neo_core::{UInt160, UInt256};
   |                         ^^^^^^^

warning: unused variable: `scrypt`
   --> crates/wallets/src/nep6.rs:773:9
    |
773 |         scrypt: &ScryptParameters,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_scrypt`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `password`
   --> crates/wallets/src/nep6.rs:774:9
    |
774 |         password: &str,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_password`

    Checking neo-mpt-trie v0.3.0 (/home/ubuntu/neo-rs/crates/mpt_trie)
warning: unused import: `IWalletFactory`
  --> crates/wallets/src/nep6.rs:12:22
   |
12 |     wallet_factory::{IWalletFactory, WalletFactory},
   |                      ^^^^^^^^^^^^^^

warning: unused import: `HASH_SIZE`
 --> crates/mpt_trie/src/cache.rs:4:18
  |
4 | use neo_config::{HASH_SIZE, MAX_SCRIPT_SIZE};
  |                  ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `common_prefix_length` and `from_nibbles`
 --> crates/mpt_trie/src/proof.rs:1:21
  |
1 | use crate::helper::{common_prefix_length, from_nibbles, to_nibbles};
  |                     ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Trie`
 --> crates/mpt_trie/src/proof.rs:2:50
  |
2 | use crate::{MptError, MptResult, Node, NodeType, Trie};
  |                                                  ^^^^

warning: unused import: `ADDRESS_SIZE`
 --> crates/mpt_trie/src/proof.rs:3:18
  |
3 | use neo_config::{ADDRESS_SIZE, HASH_SIZE};
  |                  ^^^^^^^^^^^^

warning: unused variable: `flags`
   --> crates/wallets/src/key_pair.rs:251:13
    |
251 |         let flags = encrypted_key[2];
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_flags`

warning: unused variable: `password`
   --> crates/wallets/src/nep6.rs:566:40
    |
566 |     async fn export(&self, path: &str, password: &str) -> WalletResult<()> {
    |                                        ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_password`

warning: variable does not need to be mutable
   --> crates/mpt_trie/src/node.rs:475:21
    |
475 |                 let mut node = Node::new_extension(key, next_node);
    |                     ----^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unreachable pattern
  --> crates/vm/src/jump_table/control/oracle.rs:25:13
   |
17 |             TransactionAttribute::OracleResponse { id, code, result } => {
   |             --------------------------------------------------------- matches all the relevant values
...
25 |             _ => None,
   |             ^ no value can reach this
   |
   = note: `#[warn(unreachable_patterns)]` on by default

warning: unused variable: `tx_hash`
   --> crates/wallets/src/nep6.rs:673:13
    |
673 |         let tx_hash = transaction.hash().map_err(|e| {
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tx_hash`

warning: unused variable: `storage_key`
   --> crates/mpt_trie/src/trie.rs:702:13
    |
702 |         let storage_key = format!("MPT_NODE_{}", hex::encode(hash.as_bytes()));
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_storage_key`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: method `parse_uint160` is never used
   --> crates/rpc_client/src/neo_rpc.rs:419:8
    |
12  | impl RpcClient {
    | -------------- method in this implementation
...
419 |     fn parse_uint160(&self, value: &Value) -> RpcResult<UInt160> {
    |        ^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: variable does not need to be mutable
    --> crates/mpt_trie/src/trie.rs:1009:9
     |
1009 |         mut node: Node,
     |         ----^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> crates/mpt_trie/src/trie.rs:1144:44
     |
1144 |     fn optimize_node_after_deletion(&self, mut node: Node) -> Option<Node> {
     |                                            ----^^^^
     |                                            |
     |                                            help: remove this `mut`

warning: constant `SECONDS_PER_HOUR` is never used
 --> crates/mpt_trie/src/cache.rs:2:7
  |
2 | const SECONDS_PER_HOUR: u64 = 3600;
  |       ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: methods `calculate_root_hash_from_proof`, `calculate_leaf_hash`, and `calculate_node_hash_with_child` are never used
   --> crates/mpt_trie/src/proof.rs:506:8
    |
163 | impl ProofVerifier {
    | ------------------ methods in this implementation
...
506 |     fn calculate_root_hash_from_proof(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
529 |     fn calculate_leaf_hash(&self, key: &[u8], value: &[u8]) -> MptResult<UInt256> {
    |        ^^^^^^^^^^^^^^^^^^^
...
540 |     fn calculate_node_hash_with_child(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `full` is never read
  --> crates/mpt_trie/src/trie.rs:12:5
   |
9  | pub struct Trie {
   |            ---- field in this struct
...
12 |     full: bool,
   |     ^^^^

warning: associated items `PREFIX`, `get_from_child`, and `get_recursive` are never used
  --> crates/mpt_trie/src/trie.rs:23:11
   |
22 | impl Trie {
   | --------- associated items in this implementation
23 |     const PREFIX: u8 = 0xf0;
   |           ^^^^^^
...
75 |     fn get_from_child(&mut self, child: &Option<&Node>, path: &[u8]) -> MptResult<Option<Vec<u8>>> {
   |        ^^^^^^^^^^^^^^
...
83 |     fn get_recursive(&mut self, child: &Option<&Node>, path: &[u8]) -> MptResult<Option<Vec<u8>>> {
   |        ^^^^^^^^^^^^^

warning: manual `RangeInclusive::contains` implementation
   --> crates/rpc_client/src/error.rs:156:21
    |
156 |             code if code >= -32099 && code <= -32000 => RpcError::ServerError {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(-32099..=-32000).contains(&code)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains
    = note: `-W clippy::manual-range-contains` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::manual_range_contains)]`

warning: it looks like the same item is being pushed into this `Vec`
   --> crates/mpt_trie/src/node.rs:260:25
    |
260 |                         result.push(0x00);
    |                         ^^^^^^
    |
    = help: consider using `vec![0x00;SIZE]`
    = help: or `result.extend(std::iter::repeat_n(0x00, SIZE))`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#same_item_push
    = note: `-W clippy::same-item-push` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::same_item_push)]`

warning: it looks like the same item is being pushed into this `Vec`
  --> crates/mpt_trie/src/proof.rs:93:25
   |
93 |                         result.push(0);
   |                         ^^^^^^
   |
   = help: consider using `vec![0;SIZE]`
   = help: or `result.extend(std::iter::repeat_n(0, SIZE))`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#same_item_push

warning: you should consider adding a `Default` implementation for `ProofVerifier`
   --> crates/mpt_trie/src/proof.rs:164:5
    |
164 | /     pub fn new() -> Self {
165 | |         Self
166 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
    = note: `-W clippy::new-without-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::new_without_default)]`
help: try adding this
    |
163 + impl Default for ProofVerifier {
164 +     fn default() -> Self {
165 +         Self::new()
166 +     }
167 + }
    |

warning: type `nep6::Nep6AccountFile` is more private than the item `nep6::Nep6Account::from_file`
   --> crates/wallets/src/nep6.rs:771:5
    |
771 | /     pub async fn from_file(
772 | |         account_file: Nep6AccountFile,
773 | |         scrypt: &ScryptParameters,
774 | |         password: &str,
775 | |     ) -> WalletResult<Self> {
    | |___________________________^ associated function `nep6::Nep6Account::from_file` is reachable at visibility `pub`
    |
note: but type `nep6::Nep6AccountFile` is only usable at visibility `pub(self)`
   --> crates/wallets/src/nep6.rs:50:1
    |
50  | struct Nep6AccountFile {
    | ^^^^^^^^^^^^^^^^^^^^^^
    = note: `#[warn(private_interfaces)]` on by default

warning: type `nep6::Nep6AccountFile` is more private than the item `nep6::Nep6Account::to_file`
   --> crates/wallets/src/nep6.rs:803:5
    |
803 |     pub fn to_file(&self) -> crate::Result<Nep6AccountFile> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method `nep6::Nep6Account::to_file` is reachable at visibility `pub`
    |
note: but type `nep6::Nep6AccountFile` is only usable at visibility `pub(self)`
   --> crates/wallets/src/nep6.rs:50:1
    |
50  | struct Nep6AccountFile {
    | ^^^^^^^^^^^^^^^^^^^^^^

warning: fields `contract` and `deployed` are never read
  --> crates/wallets/src/nep6.rs:82:5
   |
81 | pub struct Nep6Contract {
   |            ------------ fields in this struct
82 |     contract: Contract,
   |     ^^^^^^^^
83 |     deployed: bool,
   |     ^^^^^^^^
   |
   = note: `Nep6Contract` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: constant `ONE_MEGABYTE` is never used
  --> crates/wallets/src/scrypt_parameters.rs:10:7
   |
10 | const ONE_MEGABYTE: usize = 1024 * 1024;
   |       ^^^^^^^^^^^^

warning: the loop variable `i` is only used to index `children`
   --> crates/mpt_trie/src/proof.rs:408:26
    |
408 |                 for i in 0..16 {
    |                          ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
    = note: `-W clippy::needless-range-loop` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_range_loop)]`
help: consider using an iterator
    |
408 -                 for i in 0..16 {
408 +                 for <item> in children.iter_mut().take(16) {
    |

warning: this `if let` can be collapsed into the outer `if let`
   --> crates/mpt_trie/src/trie.rs:129:25
    |
129 | /                         if let Some(child_node) = child {
130 | |                             return self.get_node(child_node, &path[1..]);
131 | |                         }
    | |_________________________^
    |
help: the outer pattern can be modified to include the inner pattern
   --> crates/mpt_trie/src/trie.rs:128:33
    |
128 |                     if let Some(child) = node.children().get(index) {
    |                                 ^^^^^ replace this binding
129 |                         if let Some(child_node) = child {
    |                                ^^^^^^^^^^^^^^^^ with this pattern
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match
    = note: `-W clippy::collapsible-match` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::collapsible_match)]`

warning: unused variable: `i`
   --> crates/vm/src/jump_table/stack.rs:193:9
    |
193 |     for i in 0..n {
    |         ^ help: if this is intentional, prefix it with an underscore: `_i`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: you are using an explicit closure for cloning elements
   --> crates/mpt_trie/src/trie.rs:297:62
    |
297 | ...                   branch.set_child(existing_index, node.next().map(|n| n.clone()));
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `cloned` method: `node.next().cloned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone
    = note: `-W clippy::map-clone` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::map_clone)]`

warning: this `if` statement can be collapsed
   --> crates/wallets/src/contract.rs:238:9
    |
238 | /         if self.is_multi_sig {
239 | |             if self.public_keys.len() < self.signatures_required as usize {
240 | |                 return Err(Error::Other(
241 | |                     "Not enough public keys for required signatures".to_string(),
...   |
244 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
    = note: `-W clippy::collapsible-if` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::collapsible_if)]`
help: collapse nested if block
    |
238 ~         if self.is_multi_sig
239 ~             && self.public_keys.len() < self.signatures_required as usize {
240 |                 return Err(Error::Other(
241 |                     "Not enough public keys for required signatures".to_string(),
242 |                 ));
243 ~             }
    |

warning: this `if let` can be collapsed into the outer `if let`
   --> crates/mpt_trie/src/trie.rs:657:29
    |
657 | / ...                   if let Some(child_node) = child {
658 | | ...                       return self.get_proof_node(child_node, &path[1..], proof);
659 | | ...                   }
    | |_______________________^
    |
help: the outer pattern can be modified to include the inner pattern
   --> crates/mpt_trie/src/trie.rs:656:37
    |
656 |                         if let Some(child) = node.children().get(index) {
    |                                     ^^^^^ replace this binding
657 |                             if let Some(child_node) = child {
    |                                    ^^^^^^^^^^^^^^^^ with this pattern
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> crates/mpt_trie/src/trie.rs:674:37
    |
674 |                           Ok(None) => match self.load_node_from_storage(&hash) {
    |  _____________________________________^
675 | |                             Ok(node_data) => match Node::deserialize(&node_data) {
676 | |                                 Ok(resolved_node) => {
677 | |                                     let _ = self.cache.put(hash, resolved_node.clone());
...   |
683 | |                             Err(_) => {}
684 | |                         },
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
    = note: `-W clippy::single-match` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::single_match)]`
help: try
    |
674 ~                         Ok(None) => if let Ok(node_data) = self.load_node_from_storage(&hash) { match Node::deserialize(&node_data) {
675 +                             Ok(resolved_node) => {
676 +                                 let _ = self.cache.put(hash, resolved_node.clone());
677 + 
678 +                                 self.get_proof_node(&resolved_node, path, proof)?;
679 +                             }
680 +                             Err(_) => {}
681 ~                         } },
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> crates/mpt_trie/src/trie.rs:675:46
    |
675 |   ...                   Ok(node_data) => match Node::deserialize(&node_data) {
    |  ________________________________________^
676 | | ...                       Ok(resolved_node) => {
677 | | ...                           let _ = self.cache.put(hash, resolved_node.clone());
...   |
681 | | ...                       Err(_) => {}
682 | | ...                   },
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try
    |
675 ~                             Ok(node_data) => if let Ok(resolved_node) = Node::deserialize(&node_data) {
676 +                                 let _ = self.cache.put(hash, resolved_node.clone());
677 + 
678 +                                 self.get_proof_node(&resolved_node, path, proof)?;
679 ~                             },
    |

warning: manual implementation of `Option::map`
   --> crates/mpt_trie/src/trie.rs:775:37
    |
775 | / ...                   if let Some(next_next) = next_node.next() {
776 | | ...                       Some(Node::new_extension(combined_path, next_next.clone()))
777 | | ...                   } else {
778 | | ...                       None
779 | | ...                   }
    | |_______________________^ help: try: `next_node.next().map(|next_next| Node::new_extension(combined_path, next_next.clone()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map
    = note: `-W clippy::manual-map` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::manual_map)]`

warning: redundant closure
   --> crates/mpt_trie/src/trie.rs:840:41
    |
840 |                         .unwrap_or_else(|| Node::new());
    |                                         ^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Node::new`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
    = note: `-W clippy::redundant-closure` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_closure)]`

warning: redundant closure
   --> crates/wallets/src/nep6.rs:137:22
    |
137 |             .map_err(|e| WalletError::Io(e))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `WalletError::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
    = note: `-W clippy::redundant-closure` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_closure)]`

warning: unused `std::result::Result` that must be used
  --> crates/mpt_trie/src/trie.rs:71:9
   |
71 |         self.cache.commit();
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
71 |         let _ = self.cache.commit();
   |         +++++++

warning: redundant closure
   --> crates/wallets/src/nep6.rs:193:22
    |
193 |             .map_err(|e| WalletError::Io(e))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `WalletError::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: you are using an explicit closure for cloning elements
   --> crates/rpc_client/src/neo_rpc.rs:443:9
    |
443 | /         value
444 | |             .as_array()
445 | |             .ok_or_else(|| RpcError::Parse("Expected array value".to_string()))
446 | |             .map(|arr| arr.clone())
    | |___________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone
    = note: `-W clippy::map-clone` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::map_clone)]`
help: consider calling the dedicated `cloned` method
    |
443 ~         value
444 +             .as_array()
445 +             .ok_or_else(|| RpcError::Parse("Expected array value".to_string())).cloned()
    |

warning: using `clone` on type `UInt160` which implements the `Copy` trait
   --> crates/wallets/src/nep6.rs:314:22
    |
314 |             address: script_hash.clone(),
    |                      ^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*script_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::clone_on_copy)]`

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/wallets/src/nep6.rs:315:23
    |
315 |             asset_id: asset_id.clone(),
    |                       ^^^^^^^^^^^^^^^^ help: try dereferencing it: `*asset_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `UInt160` which implements the `Copy` trait
   --> crates/wallets/src/nep6.rs:325:22
    |
325 |             address: script_hash.clone(),
    |                      ^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*script_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: unused variable: `i`
   --> crates/vm/src/stack_item/stack_item.rs:156:41
    |
156 |             StackItem::InteropInterface(i) => Ok(true),
    |                                         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `interface`
   --> crates/vm/src/stack_item/stack_item.rs:242:21
    |
242 |                 let interface = Arc::as_ref(i);
    |                     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_interface`

warning: `neo-mpt-trie` (lib) generated 24 warnings (run `cargo clippy --fix --lib -p neo-mpt-trie` to apply 13 suggestions)
warning: unused variable: `self_discriminant`
   --> crates/vm/src/stack_item/stack_item.rs:531:21
    |
531 |                 let self_discriminant = std::mem::discriminant(self);
    |                     ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_self_discriminant`

warning: unused variable: `other_discriminant`
   --> crates/vm/src/stack_item/stack_item.rs:532:21
    |
532 |                 let other_discriminant = std::mem::discriminant(other);
    |                     ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_other_discriminant`

warning: unnecessary closure used to substitute value for `Option::None`
   --> crates/wallets/src/nep6.rs:661:23
    |
661 |           let account = accounts
    |  _______________________^
662 | |             .get(script_hash)
663 | |             .ok_or_else(|| WalletError::AccountNotFound(*script_hash))?;
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations
    = note: `-W clippy::unnecessary-lazy-evaluations` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unnecessary_lazy_evaluations)]`
help: use `ok_or` instead
    |
663 -             .ok_or_else(|| WalletError::AccountNotFound(*script_hash))?;
663 +             .ok_or(WalletError::AccountNotFound(*script_hash))?;
    |

warning: constant `HASH_SIZE` is never used
 --> crates/vm/src/instruction.rs:8:7
  |
8 | const HASH_SIZE: usize = 32;
  |       ^^^^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: constant `HASH_SIZE` is never used
 --> crates/vm/src/jump_table/control/control_ops.rs:8:7
  |
8 | const HASH_SIZE: usize = 32;
  |       ^^^^^^^^^

warning: constant `HASH_SIZE` is never used
 --> crates/vm/src/jump_table/control/exception_handling.rs:9:7
  |
9 | const HASH_SIZE: usize = 32;
  |       ^^^^^^^^^

warning: constant `ONE_MEGABYTE` is never used
 --> crates/vm/src/jump_table/control/syscall.rs:7:7
  |
7 | const ONE_MEGABYTE: usize = 1024 * 1024;
  |       ^^^^^^^^^^^^

warning: constant `SECONDS_PER_BLOCK` is never used
  --> crates/vm/src/jump_table/control/syscall.rs:10:7
   |
10 | const SECONDS_PER_BLOCK: u64 = 15;
   |       ^^^^^^^^^^^^^^^^^

warning: constant `HASH_SIZE` is never used
  --> crates/vm/src/jump_table/crypto.rs:11:7
   |
11 | const HASH_SIZE: usize = 32;
   |       ^^^^^^^^^

warning: function `verify` is never used
  --> crates/vm/src/jump_table/crypto.rs:31:4
   |
31 | fn verify(engine: &mut ExecutionEngine, _instruction: &Instruction) -> VmResult<()> {
   |    ^^^^^^

warning: function `verify_signature` is never used
  --> crates/vm/src/jump_table/crypto.rs:59:4
   |
59 | fn verify_signature(message: &[u8], signature: &[u8], public_key: &[u8]) -> VmResult<bool> {
   |    ^^^^^^^^^^^^^^^^

warning: methods `process_zero_referred_items`, `process_item_child_references`, `remove_item`, and `decrement_reference` are never used
   --> crates/vm/src/reference_counter.rs:315:8
    |
29  | impl ReferenceCounter {
    | --------------------- methods in this implementation
...
315 |     fn process_zero_referred_items(&self) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
358 |     fn process_item_child_references(&self, item_id: usize, item_data: &[u8]) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
398 |     fn remove_item(&self, item_id: usize) {
    |        ^^^^^^^^^^^
...
428 |     fn decrement_reference(&self, item_id: usize) {
    |        ^^^^^^^^^^^^^^^^^^^

warning: field `reference_id` is never read
  --> crates/vm/src/stack_item/array.rs:16:5
   |
12 | pub struct Array {
   |            ----- field in this struct
...
16 |     reference_id: Option<usize>,
   |     ^^^^^^^^^^^^
   |
   = note: `Array` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: `neo-rpc-client` (lib) generated 3 warnings (run `cargo clippy --fix --lib -p neo-rpc-client` to apply 2 suggestions)
warning: field `reference_id` is never read
  --> crates/vm/src/stack_item/map.rs:19:5
   |
15 | pub struct Map {
   |            --- field in this struct
...
19 |     reference_id: Option<usize>,
   |     ^^^^^^^^^^^^
   |
   = note: `Map` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `reference_id` is never read
  --> crates/vm/src/stack_item/struct_item.rs:18:5
   |
14 | pub struct Struct {
   |            ------ field in this struct
...
18 |     reference_id: Option<usize>,
   |     ^^^^^^^^^^^^
   |
   = note: `Struct` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> crates/vm/src/application_engine.rs:537:48
    |
537 |         let gas_cost = self.calculate_gas_cost(&instruction);
    |                                                ^^^^^^^^^^^^ help: change this to: `instruction`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `-W clippy::needless-borrow` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrow)]`

warning: redundant pattern matching, consider using `is_some()`
   --> crates/wallets/src/wallet_account.rs:197:16
    |
197 |         if let Some(_) = &self.encrypted_key {
    |         -------^^^^^^^---------------------- help: try: `if self.encrypted_key.is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching
    = note: `-W clippy::redundant-pattern-matching` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_pattern_matching)]`

warning: redundant pattern matching, consider using `is_some()`
   --> crates/wallets/src/wallet_account.rs:242:16
    |
242 |         if let Some(_) = &self.encrypted_key {
    |         -------^^^^^^^---------------------- help: try: `if self.encrypted_key.is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:118:56
    |
118 |         let metadata = std::fs::metadata(path).map_err(|e| Error::Io(e))?;
    |                                                        ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:125:51
    |
125 |         std::fs::copy(path, &backup_path).map_err(|e| Error::Io(e))?;
    |                                                   ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:151:61
    |
151 |             let file_size = std::fs::metadata(path).map_err(|e| Error::Io(e))?.len();
    |                                                             ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:162:30
    |
162 |                     .map_err(|e| Error::Io(e))?;
    |                              ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:170:54
    |
170 |                 file.write_all(&random_data).map_err(|e| Error::Io(e))?;
    |                                                      ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:171:38
    |
171 |                 file.flush().map_err(|e| Error::Io(e))?;
    |                                      ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:177:48
    |
177 |             std::fs::remove_file(path).map_err(|e| Error::Io(e))?;
    |                                                ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/wallets/src/wallet_factory.rs:222:56
    |
222 |         let metadata = std::fs::metadata(path).map_err(|e| Error::Io(e))?;
    |                                                        ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Error::Io`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: you should consider adding a `Default` implementation for `OperationMetrics`
   --> crates/vm/src/metrics.rs:217:5
    |
217 | /     pub fn new() -> Self {
218 | |         Self {
219 | |             count: 0,
220 | |             total_time_us: 0,
...   |
224 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
    = note: `-W clippy::new-without-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::new_without_default)]`
help: try adding this
    |
215 + impl Default for OperationMetrics {
216 +     fn default() -> Self {
217 +         Self::new()
218 +     }
219 + }
    |

warning: redundant closure
   --> crates/vm/src/metrics.rs:304:32
    |
304 |     once_cell::sync::Lazy::new(|| VmMetrics::new());
    |                                ^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `VmMetrics::new`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
    = note: `-W clippy::redundant-closure` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_closure)]`

warning: method `clone` can be confused for the standard trait method `std::clone::Clone::clone`
   --> crates/vm/src/execution_context.rs:582:5
    |
582 | /     pub fn clone(&self) -> Self {
583 | |         self.clone_with_position(self.instruction_pointer)
584 | |     }
    | |_____^
    |
    = help: consider implementing the trait `std::clone::Clone` or choosing a less ambiguous method name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait
    = note: `-W clippy::should-implement-trait` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::should_implement_trait)]`

warning: `neo-wallets` (lib) generated 33 warnings (run `cargo clippy --fix --lib -p neo-wallets` to apply 23 suggestions)
warning: redundant closure
  --> crates/vm/src/jump_table/mod.rs:62:29
   |
62 |         DEFAULT.get_or_init(|| Self::new()).clone()
   |                             ^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Self::new`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: module has the same name as its containing module
  --> crates/vm/src/stack_item/mod.rs:14:1
   |
14 | pub mod stack_item; // allow module inception for clarity of type name
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception
   = note: `-W clippy::module-inception` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::module_inception)]`

warning: useless use of `format!`
  --> crates/vm/src/safe_execution.rs:32:28
   |
32 |                 operation: format!("Jump operation"),
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Jump operation".to_string()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format
   = note: `-W clippy::useless-format` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::useless_format)]`

warning: unnecessary closure used to substitute value for `Option::None`
  --> crates/vm/src/performance_opt.rs:64:9
   |
64 | /         stack.pop()
65 | |             .ok_or_else(|| VmError::StackUnderflow {
66 | |                 requested: 1,
67 | |                 available: 0
68 | |             })
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations
   = note: `-W clippy::unnecessary-lazy-evaluations` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::unnecessary_lazy_evaluations)]`
help: use `ok_or` instead
   |
65 ~             .ok_or(VmError::StackUnderflow {
66 +                 requested: 1,
67 +                 available: 0
68 +             })
   |

warning: you should consider adding a `Default` implementation for `StringInterner`
   --> crates/vm/src/performance_opt.rs:111:5
    |
111 | /     pub fn new() -> Self {
112 | |         Self {
113 | |             interned: std::collections::HashMap::new(),
114 | |         }
115 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
109 + impl Default for StringInterner {
110 +     fn default() -> Self {
111 +         Self::new()
112 +     }
113 + }
    |

warning: very complex type used. Consider factoring parts into `type` definitions
   --> crates/vm/src/performance_opt.rs:159:16
    |
159 |     processor: Box<dyn Fn(&mut Vec<T>)>,
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
    = note: `-W clippy::type-complexity` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::type_complexity)]`

warning: redundant closure
  --> crates/vm/src/safe_type_conversion.rs:18:33
   |
18 |         core_signers.iter().map(|s| Signer::from_core(s)).collect()
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Signer::from_core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
  --> crates/vm/src/safe_type_conversion.rs:25:31
   |
25 |         core_attrs.iter().map(|a| TransactionAttribute::from_core(a)).collect()
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `TransactionAttribute::from_core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
  --> crates/vm/src/safe_type_conversion.rs:58:22
   |
58 |                 .map(|r| WitnessRule::from_core(r))
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `WitnessRule::from_core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: you should consider adding a `Default` implementation for `SafeStatic<T>`
   --> crates/vm/src/safe_type_conversion.rs:124:5
    |
124 | /     pub const fn new() -> Self {
125 | |         Self {
126 | |             value: std::sync::RwLock::new(None),
127 | |         }
128 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
122 + impl<T: Clone> Default for SafeStatic<T> {
123 +     fn default() -> Self {
124 +         Self::new()
125 +     }
126 + }
    |

warning: manual slice size calculation
   --> crates/vm/src/safe_type_conversion.rs:198:27
    |
198 |         let total_bytes = slice.len() * t_size;
    |                           ^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(slice)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_slice_size_calculation
    = note: `-W clippy::manual-slice-size-calculation` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::manual_slice_size_calculation)]`

warning: missing documentation for a struct field
   --> crates/vm/src/application_engine.rs:61:5
    |
61  |     pub block_height: u32,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> crates/vm/src/lib.rs:101:9
    |
101 | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/application_engine.rs:62:5
   |
62 |     pub timestamp: u64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> crates/vm/src/application_engine.rs:66:5
   |
66 |     pub fn block_height(&self) -> u32 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> crates/vm/src/application_engine.rs:70:5
   |
70 |     pub fn timestamp(&self) -> u64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/application_engine.rs:78:5
   |
78 |     pub current_height: u32,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/application_engine.rs:79:5
   |
79 |     pub block_timestamp: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> crates/vm/src/application_engine.rs:83:5
   |
83 |     pub fn get_current_height(&self) -> u32 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> crates/vm/src/application_engine.rs:87:5
   |
87 |     pub fn get_block_timestamp(&self) -> u64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/application_engine.rs:95:5
   |
95 |     pub current_height: u32,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/application_engine.rs:96:5
   |
96 |     pub persisting_block_time: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/application_engine.rs:100:5
    |
100 |     pub fn get_current_height(&self) -> u32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/application_engine.rs:104:5
    |
104 |     pub fn get_persisting_block_time(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:13:13
   |
13 |     Parse { message: String },
   |             ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:17:26
   |
17 |     InvalidInstruction { opcode: u8, reason: String },
   |                          ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:17:38
   |
17 |     InvalidInstruction { opcode: u8, reason: String },
   |                                      ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:21:21
   |
21 |     InvalidOpCode { opcode: u8 },
   |                     ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:25:28
   |
25 |     UnsupportedOperation { operation: String },
   |                            ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:29:24
   |
29 |     InvalidOperation { operation: String, reason: String },
   |                        ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:29:43
   |
29 |     InvalidOperation { operation: String, reason: String },
   |                                           ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:33:22
   |
33 |     InvalidOperand { expected: String, actual: String },
   |                      ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:33:40
   |
33 |     InvalidOperand { expected: String, actual: String },
   |                                        ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:37:21
   |
37 |     InvalidScript { reason: String },
   |                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:43:22
   |
43 |     StackUnderflow { requested: usize, available: usize },
   |                      ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:43:40
   |
43 |     StackUnderflow { requested: usize, available: usize },
   |                                        ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:47:21
   |
47 |     StackOverflow { max_size: usize },
   |                     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:51:16
   |
51 |     Overflow { operation: String },
   |                ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:55:17
   |
55 |     Underflow { operation: String },
   |                 ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:59:22
   |
59 |     DivisionByZero { operation: String },
   |                      ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:63:30
   |
63 |     InsufficientStackItems { required: usize, available: usize },
   |                              ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:63:47
   |
63 |     InsufficientStackItems { required: usize, available: usize },
   |                                               ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:67:19
   |
67 |     InvalidType { from: String, to: String },
   |                   ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:67:33
   |
67 |     InvalidType { from: String, to: String },
   |                                 ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:71:23
   |
71 |     ExecutionHalted { reason: String },
   |                       ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:75:15
   |
75 |     VmFault { fault_type: String, details: String },
   |               ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:75:35
   |
75 |     VmFault { fault_type: String, details: String },
   |                                   ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:79:10
   |
79 |     Io { message: String },
   |          ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:83:27
   |
83 |     MemoryLimitExceeded { used: usize, limit: usize },
   |                           ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:83:40
   |
83 |     MemoryLimitExceeded { used: usize, limit: usize },
   |                                        ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:87:32
   |
87 |     InstructionLimitExceeded { executed: u64, limit: u64 },
   |                                ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:87:47
   |
87 |     InstructionLimitExceeded { executed: u64, limit: u64 },
   |                                               ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:91:30
   |
91 |     CallDepthLimitExceeded { depth: usize, limit: usize },
   |                              ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:91:44
   |
91 |     CallDepthLimitExceeded { depth: usize, limit: usize },
   |                                            ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:95:28
   |
95 |     InvalidContractState { reason: String },
   |                            ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:99:22
   |
99 |     InteropService { service: String, error: String },
   |                      ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/error.rs:99:39
   |
99 |     InteropService { service: String, error: String },
   |                                       ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:103:24
    |
103 |     ExecutionTimeout { timeout_ms: u64 },
    |                        ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:107:25
    |
107 |     InvalidScriptHash { hash: String },
    |                         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:111:24
    |
111 |     ContractNotFound { hash: String },
    |                        ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:115:22
    |
115 |     MethodNotFound { contract: String, method: String },
    |                      ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:115:40
    |
115 |     MethodNotFound { contract: String, method: String },
    |                                        ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:119:25
    |
119 |     InvalidParameters { expected: String, actual: String },
    |                         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:119:43
    |
119 |     InvalidParameters { expected: String, actual: String },
    |                                           ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:123:20
    |
123 |     GasExhausted { used: u64, limit: u64 },
    |                    ^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:123:31
    |
123 |     GasExhausted { used: u64, limit: u64 },
    |                               ^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:127:22
    |
127 |     InvalidWitness { reason: String },
    |                      ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/error.rs:131:26
    |
131 |     VerificationFailed { reason: String },
    |                          ^^^^^^^^^^^^^^

warning: hiding a lifetime that's elided elsewhere is confusing
   --> crates/vm/src/evaluation_stack.rs:176:17
    |
176 |     pub fn iter(&self) -> std::slice::Iter<StackItem> {
    |                 ^^^^^     --------------------------- the same lifetime is hidden here
    |                 |
    |                 the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
    = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default
help: use `'_` for type paths
    |
176 |     pub fn iter(&self) -> std::slice::Iter<'_, StackItem> {
    |                                            +++

warning: hiding a lifetime that's elided elsewhere is confusing
   --> crates/vm/src/evaluation_stack.rs:181:21
    |
181 |     pub fn iter_mut(&mut self) -> std::slice::IterMut<StackItem> {
    |                     ^^^^^^^^^     ------------------------------ the same lifetime is hidden here
    |                     |
    |                     the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
help: use `'_` for type paths
    |
181 |     pub fn iter_mut(&mut self) -> std::slice::IterMut<'_, StackItem> {
    |                                                       +++

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:235:5
    |
235 |     pub byte_buffers_pooled: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:236:5
    |
236 |     pub instruction_buffers_pooled: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:237:5
    |
237 |     pub stack_item_vecs_pooled: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:238:5
    |
238 |     pub byte_buffers_allocated: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:239:5
    |
239 |     pub instruction_buffers_allocated: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:240:5
    |
240 |     pub stack_item_vecs_allocated: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:241:5
    |
241 |     pub total_memory_used: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:247:5
    |
247 |     pub byte_buffer_hit_ratio: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:248:5
    |
248 |     pub instruction_buffer_hit_ratio: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:249:5
    |
249 |     pub stack_item_vec_hit_ratio: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/memory_pool.rs:250:5
    |
250 |     pub overall_efficiency: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:209:5
    |
209 |     pub count: u64,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:210:5
    |
210 |     pub total_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:211:5
    |
211 |     pub min_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:212:5
    |
212 |     pub max_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:248:5
    |
248 |     pub timestamp: Instant,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:249:5
    |
249 |     pub instructions_executed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:250:5
    |
250 |     pub gas_consumed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:251:5
    |
251 |     pub scripts_executed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:252:5
    |
252 |     pub successful_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:253:5
    |
253 |     pub failed_executions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:254:5
    |
254 |     pub total_execution_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:255:5
    |
255 |     pub average_execution_time_us: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:256:5
    |
256 |     pub peak_stack_depth: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:257:5
    |
257 |     pub current_stack_depth: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:258:5
    |
258 |     pub memory_allocations: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:259:5
    |
259 |     pub memory_deallocations: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:260:5
    |
260 |     pub peak_memory_bytes: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:261:5
    |
261 |     pub current_memory_bytes: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:262:5
    |
262 |     pub operation_timings: HashMap<String, OperationMetrics>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/metrics.rs:263:5
    |
263 |     pub syscall_counts: HashMap<String, u64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/execution_context.rs:104:5
    |
104 |     pub script: crate::script::Script,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/execution_context.rs:105:5
    |
105 |     pub evaluation_stack: crate::evaluation_stack::EvaluationStack,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/execution_context.rs:106:5
    |
106 |     pub static_fields: Option<Slot>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/execution_context.rs:107:5
    |
107 |     pub reference_counter: ReferenceCounter,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> crates/vm/src/execution_context.rs:123:5
    |
123 |     pub fn new(script: crate::script::Script, reference_counter: ReferenceCounter) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:135:5
    |
135 |     pub fn reference_counter(&self) -> &ReferenceCounter {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:139:5
    |
139 |     pub fn script(&self) -> &crate::script::Script {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:143:5
    |
143 |     pub fn evaluation_stack(&self) -> &crate::evaluation_stack::EvaluationStack {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:147:5
    |
147 |     pub fn evaluation_stack_mut(&mut self) -> &mut crate::evaluation_stack::EvaluationStack {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:151:5
    |
151 |     pub fn static_fields(&self) -> Option<&Slot> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:155:5
    |
155 |     pub fn static_fields_mut(&mut self) -> &mut Option<Slot> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/execution_context.rs:159:5
    |
159 |     pub fn set_static_fields(&mut self, static_fields: Option<Slot>) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> crates/vm/src/jump_table/control/types.rs:12:5
   |
12 |     fn as_any(&self) -> &dyn std::any::Any;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/jump_table/control/types.rs:43:5
   |
43 |     pub script_hash: Vec<u8>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/jump_table/control/types.rs:44:5
   |
44 |     pub is_read_only: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/jump_table/control/types.rs:45:5
   |
45 |     pub id: i32,
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/jump_table/control/types.rs:61:5
   |
61 |     pub script_hash: Vec<u8>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/jump_table/control/types.rs:62:5
   |
62 |     pub key: Vec<u8>,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/jump_table/control/types.rs:68:5
   |
68 |     pub value: Vec<u8>,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:74:5
   |
74 |     Boolean,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:75:5
   |
75 |     Integer,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:76:5
   |
76 |     ByteArray,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:77:5
   |
77 |     String,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:78:5
   |
78 |     Hash160,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:79:5
   |
79 |     Array,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:80:5
   |
80 |     InteropInterface,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:81:5
   |
81 |     Any,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:82:5
   |
82 |     Void,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:88:5
   |
88 |     Boolean(bool),
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:89:5
   |
89 |     Integer(i64),
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:90:5
   |
90 |     ByteArray(Vec<u8>),
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:91:5
   |
91 |     String(String),
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:92:5
   |
92 |     Hash160(Vec<u8>),
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:93:5
   |
93 |     Array(Vec<InteropParameter>),
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:94:5
   |
94 |     InteropInterface(StackItem),
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/jump_table/control/types.rs:95:5
   |
95 |     Any(StackItem),
   |     ^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:101:5
    |
101 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:102:5
    |
102 |     pub fixed_price: u64,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:103:5
    |
103 |     pub required_call_flags: CallFlags,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:104:5
    |
104 |     pub parameters: Vec<ParameterType>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:105:5
    |
105 |     pub return_type: ParameterType,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:111:5
    |
111 |     pub catch_offset: Option<usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:112:5
    |
112 |     pub finally_offset: Option<usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:113:5
    |
113 |     pub stack_depth: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/jump_table/control/types.rs:130:5
    |
130 |     Transaction(Transaction),
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/jump_table/control/types.rs:131:5
    |
131 |     Block(Block),
    |     ^^^^^

warning: missing documentation for an associated function
   --> crates/vm/src/jump_table/control/types.rs:141:5
    |
141 |     pub fn from_core(signer: neo_core::Signer) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/jump_table/control/types.rs:145:5
    |
145 |     pub fn account(&self) -> &UInt160 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/jump_table/control/types.rs:149:5
    |
149 |     pub fn get_all_rules(&self) -> Vec<WitnessRule> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> crates/vm/src/jump_table/control/types.rs:166:5
    |
166 |     pub fn from_core(rule: neo_core::WitnessRule) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/jump_table/control/types.rs:170:5
    |
170 |     pub fn condition(&self) -> &neo_core::WitnessCondition {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/jump_table/control/types.rs:174:5
    |
174 |     pub fn action(&self) -> neo_core::WitnessRuleAction {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> crates/vm/src/jump_table/control/types.rs:178:5
    |
178 |     pub fn matches(&self, _engine: &crate::execution_engine::ExecutionEngine) -> VmResult<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:215:22
    |
215 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
    |                      ^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:215:31
    |
215 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
    |                               ^^^^^^^^

warning: missing documentation for a struct field
   --> crates/vm/src/jump_table/control/types.rs:215:41
    |
215 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
    |                                         ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:11:5
   |
11 |     PUSHINT8 = 0x00,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:12:5
   |
12 |     PUSHINT16 = 0x01,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:13:5
   |
13 |     PUSHINT32 = 0x02,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:14:5
   |
14 |     PUSHINT64 = 0x03,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:15:5
   |
15 |     PUSHINT128 = 0x04,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:16:5
   |
16 |     PUSHINT256 = 0x05,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:17:5
   |
17 |     PUSHT = 0x08,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:18:5
   |
18 |     PUSHF = 0x09,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:19:5
   |
19 |     PUSHA = 0x0A,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:20:5
   |
20 |     PUSHNULL = 0x0B,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:21:5
   |
21 |     PUSHDATA1 = 0x0C,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:22:5
   |
22 |     PUSHDATA2 = 0x0D,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:23:5
   |
23 |     PUSHDATA4 = 0x0E,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:24:5
   |
24 |     PUSHM1 = 0x0F,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:25:5
   |
25 |     PUSH0 = 0x10,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:26:5
   |
26 |     PUSH1 = 0x11,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:27:5
   |
27 |     PUSH2 = 0x12,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:28:5
   |
28 |     PUSH3 = 0x13,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:29:5
   |
29 |     PUSH4 = 0x14,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:30:5
   |
30 |     PUSH5 = 0x15,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:31:5
   |
31 |     PUSH6 = 0x16,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:32:5
   |
32 |     PUSH7 = 0x17,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:33:5
   |
33 |     PUSH8 = 0x18,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:34:5
   |
34 |     PUSH9 = 0x19,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:35:5
   |
35 |     PUSH10 = 0x1A,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:36:5
   |
36 |     PUSH11 = 0x1B,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:37:5
   |
37 |     PUSH12 = 0x1C,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:38:5
   |
38 |     PUSH13 = 0x1D,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:39:5
   |
39 |     PUSH14 = 0x1E,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:40:5
   |
40 |     PUSH15 = 0x1F,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:41:5
   |
41 |     PUSH16 = 0x20,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:44:5
   |
44 |     NOP = 0x21,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:45:5
   |
45 |     JMP = 0x22,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:46:5
   |
46 |     JmpL = 0x23,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:47:5
   |
47 |     JMPIF = 0x24,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:48:5
   |
48 |     JmpifL = 0x25,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:49:5
   |
49 |     JMPIFNOT = 0x26,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:50:5
   |
50 |     JmpifnotL = 0x27,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:51:5
   |
51 |     JMPEQ = 0x28,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:52:5
   |
52 |     JmpeqL = 0x29,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:53:5
   |
53 |     JMPNE = 0x2A,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:54:5
   |
54 |     JmpneL = 0x2B,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:55:5
   |
55 |     JMPGT = 0x2C,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:56:5
   |
56 |     JmpgtL = 0x2D,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:57:5
   |
57 |     JMPGE = 0x2E,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:58:5
   |
58 |     JmpgeL = 0x2F,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:59:5
   |
59 |     JMPLT = 0x30,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:60:5
   |
60 |     JmpltL = 0x31,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:61:5
   |
61 |     JMPLE = 0x32,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:62:5
   |
62 |     JmpleL = 0x33,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:63:5
   |
63 |     CALL = 0x34,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:64:5
   |
64 |     CallL = 0x35,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:65:5
   |
65 |     CALLA = 0x36,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:66:5
   |
66 |     CALLT = 0x37,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:67:5
   |
67 |     ABORT = 0x38,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:68:5
   |
68 |     ASSERT = 0x39,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:69:5
   |
69 |     THROW = 0x3A,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:70:5
   |
70 |     TRY = 0x3B,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:71:5
   |
71 |     TryL = 0x3C,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:72:5
   |
72 |     ENDTRY = 0x3D,
   |     ^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:73:5
   |
73 |     EndtryL = 0x3E,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:74:5
   |
74 |     ENDFINALLY = 0x3F,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:75:5
   |
75 |     RET = 0x40,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:76:5
   |
76 |     SYSCALL = 0x41,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:79:5
   |
79 |     DEPTH = 0x43,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:80:5
   |
80 |     DROP = 0x45,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:81:5
   |
81 |     NIP = 0x46,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:82:5
   |
82 |     XDROP = 0x48,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:83:5
   |
83 |     CLEAR = 0x49,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:84:5
   |
84 |     DUP = 0x4A,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:85:5
   |
85 |     OVER = 0x4B,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:87:5
   |
87 |     PICK = 0x4D,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:88:5
   |
88 |     TUCK = 0x4E,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:90:5
   |
90 |     SWAP = 0x50,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:91:5
   |
91 |     ROT = 0x51,
   |     ^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:92:5
   |
92 |     ROLL = 0x52,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:93:5
   |
93 |     REVERSE3 = 0x53,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:94:5
   |
94 |     REVERSE4 = 0x54,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:95:5
   |
95 |     REVERSEN = 0x55,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:98:5
   |
98 |     INITSSLOT = 0x56,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/op_code/op_code.rs:99:5
   |
99 |     INITSLOT = 0x57,
   |     ^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:100:5
    |
100 |     LDSFLD0 = 0x58,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:101:5
    |
101 |     LDSFLD1 = 0x59,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:102:5
    |
102 |     LDSFLD2 = 0x5A,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:103:5
    |
103 |     LDSFLD3 = 0x5B,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:104:5
    |
104 |     LDSFLD4 = 0x5C,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:105:5
    |
105 |     LDSFLD5 = 0x5D,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:106:5
    |
106 |     LDSFLD6 = 0x5E,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:107:5
    |
107 |     LDSFLD = 0x5F,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:108:5
    |
108 |     STSFLD0 = 0x60,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:109:5
    |
109 |     STSFLD1 = 0x61,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:110:5
    |
110 |     STSFLD2 = 0x62,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:111:5
    |
111 |     STSFLD3 = 0x63,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:112:5
    |
112 |     STSFLD4 = 0x64,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:113:5
    |
113 |     STSFLD5 = 0x65,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:114:5
    |
114 |     STSFLD6 = 0x66,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:115:5
    |
115 |     STSFLD = 0x67,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:116:5
    |
116 |     LDLOC0 = 0x68,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:117:5
    |
117 |     LDLOC1 = 0x69,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:118:5
    |
118 |     LDLOC2 = 0x6A,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:119:5
    |
119 |     LDLOC3 = 0x6B,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:120:5
    |
120 |     LDLOC4 = 0x6C,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:121:5
    |
121 |     LDLOC5 = 0x6D,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:122:5
    |
122 |     LDLOC6 = 0x6E,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:123:5
    |
123 |     LDLOC = 0x6F,
    |     ^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:124:5
    |
124 |     STLOC0 = 0x70,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:125:5
    |
125 |     STLOC1 = 0x71,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:126:5
    |
126 |     STLOC2 = 0x72,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:127:5
    |
127 |     STLOC3 = 0x73,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:128:5
    |
128 |     STLOC4 = 0x74,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:129:5
    |
129 |     STLOC5 = 0x75,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:130:5
    |
130 |     STLOC6 = 0x76,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:131:5
    |
131 |     STLOC = 0x77,
    |     ^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:132:5
    |
132 |     LDARG0 = 0x78,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:133:5
    |
133 |     LDARG1 = 0x79,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:134:5
    |
134 |     LDARG2 = 0x7A,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:135:5
    |
135 |     LDARG3 = 0x7B,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:136:5
    |
136 |     LDARG4 = 0x7C,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:137:5
    |
137 |     LDARG5 = 0x7D,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:138:5
    |
138 |     LDARG6 = 0x7E,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:139:5
    |
139 |     LDARG = 0x7F,
    |     ^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:140:5
    |
140 |     STARG0 = 0x80,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:141:5
    |
141 |     STARG1 = 0x81,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:142:5
    |
142 |     STARG2 = 0x82,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:143:5
    |
143 |     STARG3 = 0x83,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:144:5
    |
144 |     STARG4 = 0x84,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:145:5
    |
145 |     STARG5 = 0x85,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:146:5
    |
146 |     STARG6 = 0x86,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:147:5
    |
147 |     STARG = 0x87,
    |     ^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:150:5
    |
150 |     NEWBUFFER = 0x88,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:151:5
    |
151 |     MEMCPY = 0x89,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:153:5
    |
153 |     CAT = 0x8B,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:154:5
    |
154 |     SUBSTR = 0x8C,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:155:5
    |
155 |     LEFT = 0x8D,
    |     ^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:156:5
    |
156 |     RIGHT = 0x8E,
    |     ^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:159:5
    |
159 |     INVERT = 0x90,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:160:5
    |
160 |     AND = 0x91,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:161:5
    |
161 |     OR = 0x92,
    |     ^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:162:5
    |
162 |     XOR = 0x93,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:163:5
    |
163 |     EQUAL = 0x97,
    |     ^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:164:5
    |
164 |     NOTEQUAL = 0x98,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:167:5
    |
167 |     SIGN = 0x99,
    |     ^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:168:5
    |
168 |     ABS = 0x9A,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:169:5
    |
169 |     NEGATE = 0x9B,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:170:5
    |
170 |     INC = 0x9C,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:171:5
    |
171 |     DEC = 0x9D,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:172:5
    |
172 |     ADD = 0x9E,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:173:5
    |
173 |     SUB = 0x9F,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:174:5
    |
174 |     MUL = 0xA0,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:175:5
    |
175 |     DIV = 0xA1,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:176:5
    |
176 |     MOD = 0xA2,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:177:5
    |
177 |     POW = 0xA3,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:178:5
    |
178 |     SQRT = 0xA4,
    |     ^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:179:5
    |
179 |     MODMUL = 0xA5,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:180:5
    |
180 |     MODPOW = 0xA6,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:181:5
    |
181 |     SHL = 0xA8,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:182:5
    |
182 |     SHR = 0xA9,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:183:5
    |
183 |     NOT = 0xAA,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:184:5
    |
184 |     BOOLAND = 0xAB,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:185:5
    |
185 |     BOOLOR = 0xAC,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:186:5
    |
186 |     NZ = 0xB1,
    |     ^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:187:5
    |
187 |     NUMEQUAL = 0xB3,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:188:5
    |
188 |     NUMNOTEQUAL = 0xB4,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:189:5
    |
189 |     LT = 0xB5,
    |     ^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:190:5
    |
190 |     LE = 0xB6,
    |     ^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:191:5
    |
191 |     GT = 0xB7,
    |     ^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:192:5
    |
192 |     GE = 0xB8,
    |     ^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:193:5
    |
193 |     MIN = 0xB9,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:194:5
    |
194 |     MAX = 0xBA,
    |     ^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:195:5
    |
195 |     WITHIN = 0xBB,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:198:5
    |
198 |     PACKMAP = 0xBE,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:199:5
    |
199 |     PACKSTRUCT = 0xBF,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:200:5
    |
200 |     PACK = 0xC0,
    |     ^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:201:5
    |
201 |     UNPACK = 0xC1,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:202:5
    |
202 |     NEWARRAY0 = 0xC2,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:203:5
    |
203 |     NEWARRAY = 0xC3,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:204:5
    |
204 |     NewarrayT = 0xC4,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:205:5
    |
205 |     NEWSTRUCT0 = 0xC5,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:206:5
    |
206 |     NEWSTRUCT = 0xC6,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:207:5
    |
207 |     NEWMAP = 0xC8,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:208:5
    |
208 |     SIZE = 0xCA,
    |     ^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:209:5
    |
209 |     HASKEY = 0xCB,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:210:5
    |
210 |     KEYS = 0xCC,
    |     ^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:211:5
    |
211 |     VALUES = 0xCD,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:212:5
    |
212 |     PICKITEM = 0xCE,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:213:5
    |
213 |     APPEND = 0xCF,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:214:5
    |
214 |     SETITEM = 0xD0,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:215:5
    |
215 |     REVERSEITEMS = 0xD1,
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:216:5
    |
216 |     REMOVE = 0xD2,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:217:5
    |
217 |     CLEARITEMS = 0xD3,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:218:5
    |
218 |     POPITEM = 0xD4,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:221:5
    |
221 |     ISNULL = 0xD8,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:222:5
    |
222 |     ISTYPE = 0xD9,
    |     ^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:223:5
    |
223 |     CONVERT = 0xDB,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:226:5
    |
226 |     ABORTMSG = 0xE0,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> crates/vm/src/op_code/op_code.rs:227:5
    |
227 |     ASSERTMSG = 0xE1,
    |     ^^^^^^^^^

warning: hiding a lifetime that's elided elsewhere is confusing
   --> crates/vm/src/script.rs:376:25
    |
376 |     pub fn instructions(&self) -> InstructionIterator {
    |                         ^^^^^     ------------------- the same lifetime is hidden here
    |                         |
    |                         the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
help: use `'_` for type paths
    |
376 |     pub fn instructions(&self) -> InstructionIterator<'_> {
    |                                                      ++++

warning: hiding a lifetime that's elided elsewhere is confusing
   --> crates/vm/src/stack_item/array.rs:109:17
    |
109 |     pub fn iter(&self) -> std::slice::Iter<StackItem> {
    |                 ^^^^^     --------------------------- the same lifetime is hidden here
    |                 |
    |                 the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
help: use `'_` for type paths
    |
109 |     pub fn iter(&self) -> std::slice::Iter<'_, StackItem> {
    |                                            +++

warning: hiding a lifetime that's elided elsewhere is confusing
   --> crates/vm/src/stack_item/array.rs:114:21
    |
114 |     pub fn iter_mut(&mut self) -> std::slice::IterMut<StackItem> {
    |                     ^^^^^^^^^     ------------------------------ the same lifetime is hidden here
    |                     |
    |                     the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
help: use `'_` for type paths
    |
114 |     pub fn iter_mut(&mut self) -> std::slice::IterMut<'_, StackItem> {
    |                                                       +++

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:40:5
   |
40 |     pub account: Vec<u8>,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:41:5
   |
41 |     pub scopes: u8,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:42:5
   |
42 |     pub allowed_contracts: Vec<Vec<u8>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:43:5
   |
43 |     pub allowed_groups: Vec<Vec<u8>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:44:5
   |
44 |     pub rules: Vec<WitnessRule>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/safe_type_conversion.rs:67:5
   |
67 |     HighPriority,
   |     ^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/safe_type_conversion.rs:68:5
   |
68 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:68:22
   |
68 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
   |                      ^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:68:31
   |
68 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
   |                               ^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:68:41
   |
68 |     OracleResponse { id: u64, code: u8, result: Vec<u8> },
   |                                         ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/safe_type_conversion.rs:69:5
   |
69 |     NotValidBefore { height: u32 },
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:69:22
   |
69 |     NotValidBefore { height: u32 },
   |                      ^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/vm/src/safe_type_conversion.rs:70:5
   |
70 |     Conflicts { hash: Vec<u8> },
   |     ^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:70:17
   |
70 |     Conflicts { hash: Vec<u8> },
   |                 ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:98:5
   |
98 |     pub action: u8,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/vm/src/safe_type_conversion.rs:99:5
   |
99 |     pub condition: Vec<u8>,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: `neo-vm` (lib) generated 398 warnings (run `cargo clippy --fix --lib -p neo-vm` to apply 16 suggestions)
    Checking neo-extensions v0.3.0 (/home/ubuntu/neo-rs/crates/extensions)
warning: unused imports: `ExtensionError` and `ExtensionResult`
 --> crates/extensions/src/utilities.rs:3:20
  |
3 | use crate::error::{ExtensionError, ExtensionResult};
  |                    ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: constant `SECONDS_PER_HOUR` is never used
  --> crates/extensions/src/utilities.rs:12:7
   |
12 | const SECONDS_PER_HOUR: u64 = 3600;
   |       ^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: use of `or_insert_with` to construct default value
   --> crates/extensions/src/collections.rs:146:25
    |
146 |         self.entry(key).or_insert_with(V::default)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default
    = note: `-W clippy::unwrap-or-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unwrap_or_default)]`

warning: use of `or_insert_with` to construct default value
   --> crates/extensions/src/collections.rs:273:31
    |
273 |             groups.entry(key).or_insert_with(Vec::new).push(item);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default

warning: redundant closure
  --> crates/extensions/src/utilities.rs:16:66
   |
16 |     DateTime::from_timestamp(timestamp as i64, 0).unwrap_or_else(|| Utc::now())
   |                                                                  ^^^^^^^^^^^^^ help: replace the closure with the function itself: `Utc::now`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
   = note: `-W clippy::redundant-closure` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::redundant_closure)]`

warning: `neo-extensions` (lib) generated 5 warnings (run `cargo clippy --fix --lib -p neo-extensions` to apply 4 suggestions)
    Checking rocksdb v0.21.0
    Checking neo-persistence v0.3.0 (/home/ubuntu/neo-rs/crates/persistence)
    Checking neo-smart-contract v0.3.0 (/home/ubuntu/neo-rs/crates/smart_contract)
warning: unexpected `cfg` condition value: `std`
   --> crates/smart_contract/src/application_engine/gas.rs:120:15
    |
120 |         #[cfg(feature = "std")]
    |               ^^^^^^^^^^^^^^^ help: remove the condition
    |
    = note: no expected values for `feature`
    = help: consider adding `std` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `neo_core::constants::MAX_STORAGE_KEY_SIZE`
 --> crates/smart_contract/src/application_engine/storage.rs:8:5
  |
8 | use neo_core::constants::MAX_STORAGE_KEY_SIZE;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `neo_core::constants::MAX_STORAGE_VALUE_SIZE`
 --> crates/smart_contract/src/application_engine/storage.rs:9:5
  |
9 | use neo_core::constants::MAX_STORAGE_VALUE_SIZE;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: empty line after doc comment
  --> crates/smart_contract/src/application_engine/storage.rs:14:1
   |
14 | / /// Maximum size of storage values (matches C# ApplicationEngine.MaxStorageValueSize exactly).
15 | |
   | |_^
...
18 |   pub struct StorageContext {
   |   ------------------------- the comment documents this struct
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments
   = note: `-W clippy::empty-line-after-doc-comments` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::empty_line_after_doc_comments)]`
   = help: if the empty line is unintentional, remove it
help: if the documentation should include the empty line include it in the comment
   |
15 | ///
   |

warning: unused import: `NefFile`
  --> crates/smart_contract/src/application_engine.rs:17:44
   |
17 | use crate::contract_state::{ContractState, NefFile};
   |                                            ^^^^^^^

warning: unused import: `crate::manifest::ContractManifest`
  --> crates/smart_contract/src/application_engine.rs:19:5
   |
19 | use crate::manifest::ContractManifest;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: empty line after doc comment
  --> crates/smart_contract/src/application_engine.rs:35:1
   |
35 | / /// Maximum size of storage values (matches C# ApplicationEngine.MaxStorageValueSize exactly).
36 | |
   | |_^
...
39 |   pub struct StorageContext {
   |   ------------------------- the comment documents this struct
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments
   = help: if the empty line is unintentional, remove it
help: if the documentation should include the empty line include it in the comment
   |
36 | ///
   |

warning: empty line after doc comment
    --> crates/smart_contract/src/application_engine.rs:1362:5
     |
1362 | /     /// Production-ready methods for ApplicationEngine
1363 | |
     | |_^
1364 |       /// Queries policy contract storage price (production-ready implementation)
1365 |       fn query_policy_contract_storage_price(&self) -> Result<usize> {
     |       -------------------------------------- the comment documents this function
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments
     = help: if the empty line is unintentional, remove it
help: if the documentation should include the empty line include it in the comment
     |
1363 |     ///
     |

warning: unused import: `EventError`
 --> crates/smart_contract/src/events.rs:6:20
  |
6 | use crate::{Error, EventError, Result};
  |                    ^^^^^^^^^^

warning: unused import: `std::time::Duration`
  --> crates/smart_contract/src/events.rs:14:5
   |
14 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_vm::TriggerType`
  --> crates/smart_contract/src/interop/contract.rs:12:5
   |
12 | use neo_vm::TriggerType;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ADDRESS_SIZE` and `HASH_SIZE`
 --> crates/smart_contract/src/interop/crypto.rs:6:18
  |
6 | use neo_config::{ADDRESS_SIZE, HASH_SIZE, SECONDS_PER_BLOCK};
  |                  ^^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `neo_vm::TriggerType`
 --> crates/smart_contract/src/interop/runtime.rs:8:5
  |
8 | use neo_vm::TriggerType;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ContractState` and `NefFile`
 --> crates/smart_contract/src/interop/storage.rs:4:29
  |
4 | use crate::contract_state::{ContractState, NefFile};
  |                             ^^^^^^^^^^^^^  ^^^^^^^

warning: unused import: `crate::manifest::ContractManifest`
 --> crates/smart_contract/src/interop/storage.rs:6:5
  |
6 | use crate::manifest::ContractManifest;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_core::UInt160`
  --> crates/smart_contract/src/interop/storage.rs:10:5
   |
10 | use neo_core::UInt160;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `neo_vm::TriggerType`
  --> crates/smart_contract/src/interop/storage.rs:11:5
   |
11 | use neo_vm::TriggerType;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ADDRESS_SIZE` and `HASH_SIZE`
 --> crates/smart_contract/src/manifest/contract_abi.rs:6:18
  |
6 | use neo_config::{ADDRESS_SIZE, HASH_SIZE};
  |                  ^^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `HASH_SIZE`
 --> crates/smart_contract/src/manifest/contract_group.rs:7:32
  |
7 | use neo_config::{ADDRESS_SIZE, HASH_SIZE};
  |                                ^^^^^^^^^

warning: unused imports: `ContractGroup` and `ContractManifest`
 --> crates/smart_contract/src/manifest/contract_permission.rs:6:13
  |
6 | use super::{ContractGroup, ContractManifest, WildcardContainer};
  |             ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused import: `HASH_SIZE`
  --> crates/smart_contract/src/native/contract_management.rs:11:18
   |
11 | use neo_config::{HASH_SIZE, MAX_SCRIPT_SIZE};
   |                  ^^^^^^^^^

warning: unused import: `Deserialize`
  --> crates/smart_contract/src/native/contract_management.rs:14:13
   |
14 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^

warning: unused imports: `ECPoint` and `ecc::ECCurve`
 --> crates/smart_contract/src/native/crypto_lib.rs:7:24
  |
7 | use neo_cryptography::{ecc::ECCurve, ECPoint};
  |                        ^^^^^^^^^^^^  ^^^^^^^

warning: unused import: `crate::application_engine::StorageContext`
 --> crates/smart_contract/src/native/gas_token.rs:4:5
  |
4 | use crate::application_engine::StorageContext;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DB` and `Options`
 --> crates/smart_contract/src/native/gas_token.rs:9:15
  |
9 | use rocksdb::{Options, DB};
  |               ^^^^^^^  ^^

warning: unused imports: `SystemTime` and `UNIX_EPOCH`
  --> crates/smart_contract/src/native/gas_token.rs:11:17
   |
11 | use std::time::{SystemTime, UNIX_EPOCH};
   |                 ^^^^^^^^^^  ^^^^^^^^^^

warning: digits grouped inconsistently by underscores
  --> crates/smart_contract/src/native/gas_token.rs:14:37
   |
14 | pub const GAS_INITIAL_SUPPLY: i64 = 5200_0000_00000000; // 52 million GAS
   |                                     ^^^^^^^^^^^^^^^^^^ help: consider: `5_200_000_000_000_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping
   = note: `-W clippy::inconsistent-digit-grouping` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::inconsistent_digit_grouping)]`

warning: unused import: `neo_vm::TriggerType`
  --> crates/smart_contract/src/native/neo_token.rs:17:5
   |
17 | use neo_vm::TriggerType;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `BTreeMap`
  --> crates/smart_contract/src/native/neo_token.rs:21:24
   |
21 | use std::collections::{BTreeMap, HashMap};
   |                        ^^^^^^^^

warning: unused import: `std::str::FromStr`
  --> crates/smart_contract/src/native/neo_token.rs:22:5
   |
22 | use std::str::FromStr;
   |     ^^^^^^^^^^^^^^^^^

warning: digits grouped inconsistently by underscores
    --> crates/smart_contract/src/native/neo_token.rs:1228:21
     |
1228 |                     100_000_000_00000000 // Initial GAS supply
     |                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `10_000_000_000_000_000`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping

warning: digits grouped inconsistently by underscores
    --> crates/smart_contract/src/native/neo_token.rs:1231:18
     |
1231 |             _ => 100_000_000_00000000, // Initial GAS supply
     |                  ^^^^^^^^^^^^^^^^^^^^ help: consider: `10_000_000_000_000_000`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping

warning: unused import: `UInt256`
  --> crates/smart_contract/src/native/oracle_contract.rs:11:25
   |
11 | use neo_core::{UInt160, UInt256};
   |                         ^^^^^^^

warning: unused import: `HASH_SIZE`
 --> crates/smart_contract/src/native/role_management.rs:9:18
  |
9 | use neo_config::{HASH_SIZE, SECONDS_PER_BLOCK};
  |                  ^^^^^^^^^

warning: unused import: `MAX_SCRIPT_SIZE`
 --> crates/smart_contract/src/performance.rs:6:32
  |
6 | use neo_config::{ADDRESS_SIZE, MAX_SCRIPT_SIZE, SECONDS_PER_BLOCK};
  |                                ^^^^^^^^^^^^^^^

warning: unused import: `crate::manifest::ContractParameterType`
 --> crates/smart_contract/src/validation.rs:9:5
  |
9 | use crate::manifest::ContractParameterType;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: digits grouped inconsistently by underscores
   --> crates/smart_contract/src/validation.rs:402:35
    |
402 |         let base_deployment_fee = 1000_000_000; // 10 GAS base deployment fee (C# constant)
    |                                   ^^^^^^^^^^^^ help: consider: `1_000_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping

warning: unused variable: `snapshot`
   --> crates/persistence/src/lib.rs:383:13
    |
383 |         let snapshot = self.get_snapshot();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_snapshot`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: field `provider` is never read
   --> crates/persistence/src/lib.rs:206:5
    |
205 | pub struct Storage {
    |            ------- field in this struct
206 |     provider: Arc<dyn StorageProvider>,
    |     ^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field `config` is never read
  --> crates/persistence/src/index.rs:66:5
   |
56 | pub struct BTreeIndex<K, V>
   |            ---------- field in this struct
...
66 |     config: IndexConfig,
   |     ^^^^^^

warning: field `config` is never read
   --> crates/persistence/src/index.rs:226:5
    |
216 | pub struct HashIndex<K, V>
    |            --------- field in this struct
...
226 |     config: IndexConfig,
    |     ^^^^^^

warning: field `config` is never read
   --> crates/persistence/src/migration.rs:237:5
    |
235 | pub struct MigrationManager {
    |            ---------------- field in this struct
236 |     /// Configuration
237 |     config: MigrationConfig,
    |     ^^^^^^

warning: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do
   --> crates/persistence/src/backup.rs:528:46
    |
528 |     fn get_metadata_path(&self, backup_path: &PathBuf) -> PathBuf {
    |                                              ^^^^^^^^ help: change this to: `&Path`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
    = note: `-W clippy::ptr-arg` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::ptr_arg)]`

warning: this can be `std::io::Error::other(_)`
   --> crates/persistence/src/backup.rs:575:45
    |
575 |                   return Err(crate::Error::Io(std::io::Error::new(
    |  _____________________________________________^
576 | |                     std::io::ErrorKind::Other,
577 | |                     format!(
578 | |                         "Failed to delete {} old backups: {}",
...   |
581 | |                     ),
582 | |                 )));
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error
    = note: `-W clippy::io-other-error` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::io_other_error)]`
help: use `std::io::Error::other`
    |
575 ~                 return Err(crate::Error::Io(std::io::Error::other(
576 ~                     format!(
    |

warning: use of `or_insert_with` to construct default value
   --> crates/persistence/src/index.rs:115:34
    |
115 |             self.data.entry(key).or_insert_with(Vec::new).push(value);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default
    = note: `-W clippy::unwrap-or-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unwrap_or_default)]`

warning: you seem to want to iterate on a map's values
   --> crates/persistence/src/index.rs:207:28
    |
207 |         for (_, values) in &self.data {
    |                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map
    = note: `-W clippy::for-kv-map` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::for_kv_map)]`
help: use the corresponding method
    |
207 -         for (_, values) in &self.data {
207 +         for values in self.data.values() {
    |

warning: use of `or_insert_with` to construct default value
   --> crates/persistence/src/index.rs:275:34
    |
275 |             self.data.entry(key).or_insert_with(Vec::new).push(value);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default

warning: you seem to want to iterate on a map's values
   --> crates/persistence/src/index.rs:356:28
    |
356 |         for (_, values) in &self.data {
    |                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map
help: use the corresponding method
    |
356 -         for (_, values) in &self.data {
356 +         for values in self.data.values() {
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> crates/persistence/src/migration.rs:184:9
    |
184 | /         match operation.operation_type {
185 | |             OperationType::Schema => {
186 | |                 // Apply schema change
187 | |                 debug!("Applying migration: {}", operation.sql);
188 | |             }
189 | |             _ => {}
190 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
    = note: `-W clippy::single-match` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::single_match)]`
help: try
    |
184 ~         if let OperationType::Schema = operation.operation_type {
185 +             // Apply schema change
186 +             debug!("Applying migration: {}", operation.sql);
187 +         }
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> crates/persistence/src/migration.rs:197:9
    |
197 | /         match operation.operation_type {
198 | |             OperationType::Rollback => {
199 | |                 // Apply rollback
200 | |                 debug!("Applying rollback: {}", operation.sql);
201 | |             }
202 | |             _ => {}
203 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try
    |
197 ~         if let OperationType::Rollback = operation.operation_type {
198 +             // Apply rollback
199 +             debug!("Applying rollback: {}", operation.sql);
200 +         }
    |

warning: this match could be written as a `let` statement
   --> crates/persistence/src/serialization.rs:112:5
    |
112 | /     match lz4_flex::compress_prepend_size(data) {
113 | |         compressed => Ok(compressed),
114 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding
    = note: `-W clippy::match-single-binding` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::match_single_binding)]`
help: consider using a `let` statement
    |
112 ~     let compressed = lz4_flex::compress_prepend_size(data);
113 +     Ok(compressed)
    |

warning: missing documentation for an associated function
   --> crates/persistence/src/rocksdb/mod.rs:122:5
    |
122 |     pub fn new(db: Arc<DB>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> crates/persistence/src/lib.rs:136:9
    |
136 | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> crates/persistence/src/rocksdb/mod.rs:256:5
    |
256 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:12:5
   |
12 |     Forward,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:13:5
   |
13 |     Backward,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:19:5
   |
19 |     None,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:20:5
   |
20 |     Lz4,
   |     ^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:21:5
   |
21 |     Zstd,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:27:5
   |
27 |     Level,
   |     ^^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:28:5
   |
28 |     Universal,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:29:5
   |
29 |     Fifo,
   |     ^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:35:5
   |
35 |     Put { key: Vec<u8>, value: Vec<u8> },
   |     ^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:35:11
   |
35 |     Put { key: Vec<u8>, value: Vec<u8> },
   |           ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:35:25
   |
35 |     Put { key: Vec<u8>, value: Vec<u8> },
   |                         ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> crates/persistence/src/storage.rs:36:5
   |
36 |     Delete { key: Vec<u8> },
   |     ^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:36:14
   |
36 |     Delete { key: Vec<u8> },
   |              ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:42:5
   |
42 |     pub path: PathBuf,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:43:5
   |
43 |     pub compression_algorithm: CompressionAlgorithm,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:44:5
   |
44 |     pub compaction_strategy: CompactionStrategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:45:5
   |
45 |     pub max_open_files: Option<u32>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:46:5
   |
46 |     pub cache_size: Option<usize>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:47:5
   |
47 |     pub write_buffer_size: Option<usize>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/storage.rs:48:5
   |
48 |     pub enable_statistics: bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/cache.rs:34:5
   |
34 |     pub hits: u64,
   |     ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/cache.rs:35:5
   |
35 |     pub misses: u64,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/cache.rs:36:5
   |
36 |     pub evictions: u64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/cache.rs:37:5
   |
37 |     pub entries: usize,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> crates/persistence/src/cache.rs:41:5
   |
41 |     pub fn hit_rate(&self) -> f64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/index.rs:48:5
   |
48 |     pub entries: usize,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/index.rs:49:5
   |
49 |     pub lookups: u64,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/index.rs:50:5
   |
50 |     pub inserts: u64,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/index.rs:51:5
   |
51 |     pub deletes: u64,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/persistence/src/index.rs:52:5
   |
52 |     pub memory_usage: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: `neo-persistence` (lib) generated 46 warnings (run `cargo clippy --fix --lib -p neo-persistence` to apply 7 suggestions)
    Checking neo-ledger v0.3.0 (/home/ubuntu/neo-rs/crates/ledger)
warning: unused import: `Serializable`
  --> crates/smart_contract/src/manifest/contract_manifest.rs:10:42
   |
10 | use neo_io::{BinaryWriter, MemoryReader, Serializable};
   |                                          ^^^^^^^^^^^^

warning: unused import: `Serializable`
  --> crates/smart_contract/src/native/contract_management.rs:13:42
   |
13 | use neo_io::{BinaryWriter, MemoryReader, Serializable};
   |                                          ^^^^^^^^^^^^

warning: unused import: `Serialize`
  --> crates/smart_contract/src/native/contract_management.rs:14:26
   |
14 | use serde::{Deserialize, Serialize};
   |                          ^^^^^^^^^

warning: unused variable: `args`
    --> crates/smart_contract/src/application_engine.rs:1015:9
     |
1015 |         args: &[Vec<u8>],
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_args`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
   --> crates/smart_contract/src/deployment.rs:224:9
    |
224 |         sender: UInt160,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `engine`
   --> crates/smart_contract/src/interop/contract.rs:248:9
    |
248 |         engine: &ApplicationEngine,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused import: `Result`
 --> crates/ledger/src/block/block.rs:9:13
  |
9 | use crate::{Result, VerifyResult};
  |             ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Error` and `Result`
 --> crates/ledger/src/block/header.rs:7:13
  |
7 | use crate::{Error, Result, VerifyResult};
  |             ^^^^^  ^^^^^^

warning: unused import: `ADDRESS_SIZE`
 --> crates/ledger/src/block/header.rs:8:18
  |
8 | use neo_config::{ADDRESS_SIZE, MILLISECONDS_PER_BLOCK};
  |                  ^^^^^^^^^^^^

warning: unused imports: `Signer`, `WitnessCondition`, and `WitnessScope`
 --> crates/ledger/src/block/header.rs:9:16
  |
9 | use neo_core::{Signer, UInt160, UInt256, Witness, WitnessCondition, WitnessScope};
  |                ^^^^^^                             ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `neo_cryptography::ECPoint`
  --> crates/ledger/src/block/header.rs:10:5
   |
10 | use neo_cryptography::ECPoint;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_vm::ApplicationEngine`
  --> crates/ledger/src/block/header.rs:12:5
   |
12 | use neo_vm::ApplicationEngine;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `script`
   --> crates/smart_contract/src/interop/contract.rs:509:39
    |
509 |     fn validate_script_opcodes(&self, script: &[u8]) -> Result<bool> {
    |                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_script`

warning: unused import: `Error`
 --> crates/ledger/src/block/verification.rs:7:13
  |
7 | use crate::{Error, Result, VerifyResult};
  |             ^^^^^

warning: unused imports: `Signer`, `WitnessCondition`, and `WitnessScope`
  --> crates/ledger/src/block/verification.rs:10:16
   |
10 | use neo_core::{Signer, UInt160, UInt256, Witness, WitnessCondition, WitnessScope};
   |                ^^^^^^                             ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `Error`, `Result`, and `VerifyResult`
  --> crates/ledger/src/block/mod.rs:21:13
   |
21 | use crate::{Error, Result, VerifyResult};
   |             ^^^^^  ^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `RocksDBStorage`, `StorageItem`, and `StorageKey`
 --> crates/ledger/src/blockchain/blockchain.rs:9:15
  |
9 |     storage::{RocksDBStorage, Storage, StorageItem, StorageKey},
  |               ^^^^^^^^^^^^^^           ^^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `BlockHeader`
  --> crates/ledger/src/blockchain/blockchain.rs:12:20
   |
12 | use crate::{Block, BlockHeader, Error, NetworkType, Result};
   |                    ^^^^^^^^^^^

warning: unused import: `UInt160`
  --> crates/ledger/src/blockchain/blockchain.rs:14:29
   |
14 | use neo_core::{Transaction, UInt160, UInt256};
   |                             ^^^^^^^

warning: unused variable: `engine`
   --> crates/smart_contract/src/interop/crypto.rs:308:25
    |
308 | pub fn verify_signature(engine: &mut ApplicationEngine, args: &[Vec<u8>]) -> Result<Vec<u8>> {
    |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `current_contract`
   --> crates/smart_contract/src/interop/storage.rs:131:13
    |
131 |         let current_contract = engine
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current_contract`

warning: unused variable: `results`
   --> crates/smart_contract/src/interop/storage.rs:136:13
    |
136 |         let results: Vec<(Vec<u8>, StorageItem)> = Vec::new();
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_results`

warning: unused variable: `storage_prefix`
   --> crates/smart_contract/src/interop/storage.rs:145:13
    |
145 |         let storage_prefix = StorageKey::new(current_contract.hash, prefix.clone());
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_storage_prefix`

warning: unused import: `UInt160`
 --> crates/ledger/src/blockchain/persistence.rs:8:29
  |
8 | use neo_core::{Transaction, UInt160, UInt256};
  |                             ^^^^^^^

warning: unused import: `std::pin::Pin`
  --> crates/ledger/src/blockchain/persistence.rs:10:5
   |
10 | use std::pin::Pin;
   |     ^^^^^^^^^^^^^

warning: unused import: `UInt256`
  --> crates/ledger/src/blockchain/state.rs:12:38
   |
12 | use neo_core::{Transaction, UInt160, UInt256};
   |                                      ^^^^^^^

warning: unused import: `neo_io::Serializable`
    --> crates/ledger/src/blockchain/state.rs:1152:13
     |
1152 |         use neo_io::Serializable;
     |             ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Snapshot`
 --> crates/ledger/src/blockchain/storage.rs:7:24
  |
7 | use rocksdb::{Options, Snapshot, DB};
  |                        ^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> crates/ledger/src/blockchain/storage.rs:8:5
  |
8 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> crates/ledger/src/blockchain/storage.rs:10:5
   |
10 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `UInt160` and `UInt256`
 --> crates/ledger/src/blockchain/verification.rs:7:29
  |
7 | use neo_core::{Transaction, UInt160, UInt256, Witness};
  |                             ^^^^^^^  ^^^^^^^

warning: unused variable: `result`
   --> crates/smart_contract/src/native/crypto_lib.rs:229:13
    |
229 |         let result = bls12_381::pairing(&g1_point.into(), &g2_point.into());
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: variable does not need to be mutable
   --> crates/smart_contract/src/native/crypto_lib.rs:233:13
    |
233 |         let mut bytes = vec![0u8; 576];
    |             ----^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `engine`
   --> crates/smart_contract/src/native/crypto_lib.rs:533:9
    |
533 |         engine: &mut ApplicationEngine,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `block`
   --> crates/smart_contract/src/native/ledger_contract.rs:285:26
    |
285 |                     Some(block) => {
    |                          ^^^^^ help: if this is intentional, prefix it with an underscore: `_block`

warning: unused variable: `engine`
   --> crates/smart_contract/src/native/ledger_contract.rs:395:26
    |
395 |     fn on_persist(&self, engine: &mut ApplicationEngine) -> Result<()> {
    |                          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `engine`
   --> crates/smart_contract/src/native/neo_token.rs:563:9
    |
563 |         engine: &mut ApplicationEngine,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `storage_key`
   --> crates/smart_contract/src/native/neo_token.rs:676:13
    |
676 |         let storage_key = self.create_account_storage_key(account);
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_storage_key`

warning: unused variable: `engine`
  --> crates/smart_contract/src/native/std_lib.rs:52:9
   |
52 |         engine: &mut ApplicationEngine,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `engine`
   --> crates/smart_contract/src/validation.rs:399:9
    |
399 |         engine: &ApplicationEngine,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: constant `PREFIX_MINIMUM_DEPLOYMENT_FEE` is never used
  --> crates/smart_contract/src/native/contract_management.rs:20:7
   |
20 | const PREFIX_MINIMUM_DEPLOYMENT_FEE: u8 = 20;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `PREFIX_NEXT_AVAILABLE_ID` is never used
  --> crates/smart_contract/src/native/contract_management.rs:22:7
   |
22 | const PREFIX_NEXT_AVAILABLE_ID: u8 = 15;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `PREFIX_CONTRACT` is never used
  --> crates/smart_contract/src/native/contract_management.rs:24:7
   |
24 | const PREFIX_CONTRACT: u8 = 8;
   |       ^^^^^^^^^^^^^^^

warning: constant `PREFIX_CONTRACT_HASH` is never used
  --> crates/smart_contract/src/native/contract_management.rs:26:7
   |
26 | const PREFIX_CONTRACT_HASH: u8 = 12;
   |       ^^^^^^^^^^^^^^^^^^^^

warning: constant `PREFIX_CONTRACT_COUNT` is never used
  --> crates/smart_contract/src/native/contract_management.rs:28:7
   |
28 | const PREFIX_CONTRACT_COUNT: u8 = 16;
   |       ^^^^^^^^^^^^^^^^^^^^^

warning: constant `PREFIX_BLOCK` is never used
  --> crates/smart_contract/src/native/ledger_contract.rs:15:7
   |
15 | const PREFIX_BLOCK: u8 = 9;
   |       ^^^^^^^^^^^^

warning: constant `PREFIX_TRANSACTION` is never used
  --> crates/smart_contract/src/native/ledger_contract.rs:17:7
   |
17 | const PREFIX_TRANSACTION: u8 = 11;
   |       ^^^^^^^^^^^^^^^^^^

warning: constant `PREFIX_CURRENT_BLOCK` is never used
  --> crates/smart_contract/src/native/ledger_contract.rs:19:7
   |
19 | const PREFIX_CURRENT_BLOCK: u8 = 12;
   |       ^^^^^^^^^^^^^^^^^^^^

warning: constant `PREFIX_BLOCK_HASH_LIST` is never used
  --> crates/smart_contract/src/native/ledger_contract.rs:21:7
   |
21 | const PREFIX_BLOCK_HASH_LIST: u8 = 14;
   |       ^^^^^^^^^^^^^^^^^^^^^^

warning: fields `committee_state`, `vote_tracker`, `account_states`, and `candidate_states` are never read
  --> crates/smart_contract/src/native/neo_token.rs:35:5
   |
31 | pub struct NeoToken {
   |            -------- fields in this struct
...
35 |     committee_state: Arc<RwLock<CommitteeState>>,
   |     ^^^^^^^^^^^^^^^
36 |     /// Vote tracker for governance
37 |     vote_tracker: Arc<RwLock<VoteTracker>>,
   |     ^^^^^^^^^^^^
38 |     /// Account states cache
39 |     account_states: Arc<RwLock<HashMap<UInt160, NeoAccountState>>>,
   |     ^^^^^^^^^^^^^^
40 |     /// Candidate states cache  
41 |     candidate_states: Arc<RwLock<HashMap<ECPoint, CandidateState>>>,
   |     ^^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> crates/smart_contract/src/validation.rs:529:8
    |
59  | impl ContractValidator {
    | ---------------------- methods in this implementation
...
529 |     fn validate_called_by_entry_scope(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
549 |     fn validate_transaction_entry_scope(&self, engine: &ApplicationEngine) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
564 |     fn validate_custom_witness_scope(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
660 |     fn calculate_contract_storage_fee(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
712 |     fn estimate_complexity_from_manifest(&self, manifest: &ContractManifest) -> Result<i64> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
886 |     fn validate_generic_container_entry_scope(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
901 |     fn validate_execution_context_entry_scope(&self, _engine: &ApplicationEngine) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
906 |     fn validate_container_witness(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
915 |     fn validate_custom_groups_scope(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
924 |     fn validate_witness_rules_scope(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`
   --> crates/smart_contract/src/application_engine/storage.rs:98:5
    |
98  | /     pub fn next(&mut self) -> bool {
99  | |         if self.position < self.entries.len() {
100 | |             self.position += 1;
101 | |             true
...   |
105 | |     }
    | |_____^
    |
    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait
    = note: `-W clippy::should-implement-trait` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::should_implement_trait)]`

warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`
   --> crates/smart_contract/src/application_engine.rs:119:5
    |
119 | /     pub fn next(&mut self) -> bool {
120 | |         if self.position < self.entries.len() {
121 | |             self.position += 1;
122 | |             true
...   |
126 | |     }
    | |_____^
    |
    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> crates/smart_contract/src/application_engine.rs:871:56
    |
871 |         if !self.check_contract_permissions(&contract, &method) {
    |                                                        ^^^^^^^ help: change this to: `method`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `-W clippy::needless-borrow` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrow)]`

warning: using `Result.or_else(|x| Err(y))`, which is more succinctly expressed as `map_err(|x| y)`
    --> crates/smart_contract/src/application_engine.rs:1002:9
     |
1002 | /         self.parse_nef_token_structure(nef, method).or_else(|_| {
1003 | |             Err(Error::InvalidOperation(format!(
1004 | |                 "Method '{}' not found in NEF method table",
1005 | |                 method
1006 | |             )))
1007 | |         })
     | |__________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bind_instead_of_map
     = note: `-W clippy::bind-instead-of-map` implied by `-W clippy::all`
     = help: to override `-W clippy::all` add `#[allow(clippy::bind_instead_of_map)]`
help: try
     |
1002 ~         self.parse_nef_token_structure(nef, method).map_err(|_| Error::InvalidOperation(format!(
1003 +                 "Method '{}' not found in NEF method table",
1004 +                 method
1005 +             )))
     |

warning: this expression creates a reference which is immediately dereferenced by the compiler
    --> crates/smart_contract/src/application_engine.rs:1049:45
     |
1049 |         if !self.check_contract_permissions(&contract, &method) {
     |                                             ^^^^^^^^^ help: change this to: `contract`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
    --> crates/smart_contract/src/application_engine.rs:1049:56
     |
1049 |         if !self.check_contract_permissions(&contract, &method) {
     |                                                        ^^^^^^^ help: change this to: `method`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this match could be replaced by its body itself
    --> crates/smart_contract/src/application_engine.rs:1057:22
     |
1057 |           let result = match contract_hash {
     |  ______________________^
1058 | |             _ => Err(Error::ContractNotFound(format!(
1059 | |                 "Contract not found: {}",
1060 | |                 contract_hash
1061 | |             ))),
1062 | |         };
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding
     = note: `-W clippy::match-single-binding` implied by `-W clippy::all`
     = help: to override `-W clippy::all` add `#[allow(clippy::match_single_binding)]`
help: consider using the match body instead
     |
1057 ~         let result = Err(Error::ContractNotFound(format!(
1058 +             "Contract not found: {}",
1059 +             contract_hash
1060 ~         )));
     |

warning: this expression creates a reference which is immediately dereferenced by the compiler
    --> crates/smart_contract/src/application_engine.rs:1343:59
     |
1343 |             let context = self.get_native_storage_context(&current_hash)?;
     |                                                           ^^^^^^^^^^^^^ help: change this to: `current_hash`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
    --> crates/smart_contract/src/application_engine.rs:1354:59
     |
1354 |             let context = self.get_native_storage_context(&current_hash)?;
     |                                                           ^^^^^^^^^^^^^ help: change this to: `current_hash`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: using `clone` on type `UInt160` which implements the `Copy` trait
    --> crates/smart_contract/src/application_engine.rs:1386:23
     |
1386 |             contract: contract_hash.clone(),
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*contract_hash`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
     = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
     = help: to override `-W clippy::all` add `#[allow(clippy::clone_on_copy)]`

warning: using `clone` on type `UInt160` which implements the `Copy` trait
    --> crates/smart_contract/src/application_engine.rs:1400:23
     |
1400 |             contract: contract_hash.clone(),
     |                       ^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*contract_hash`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: use of `or_insert_with` to construct default value
   --> crates/smart_contract/src/events.rs:220:14
    |
220 |             .or_insert_with(Vec::new)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default
    = note: `-W clippy::unwrap-or-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unwrap_or_default)]`

warning: use of `or_insert_with` to construct default value
   --> crates/smart_contract/src/events.rs:225:14
    |
225 |             .or_insert_with(Vec::new)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default

warning: parameter is only used in recursion
   --> crates/smart_contract/src/events.rs:412:30
    |
412 |     fn calculate_value_size(&self, value: &EventValue) -> usize {
    |                              ^^^^
    |
note: parameter used here
   --> crates/smart_contract/src/events.rs:421:58
    |
421 |             EventValue::Array(arr) => arr.iter().map(|v| self.calculate_value_size(v)).sum(),
    |                                                          ^^^^
...
424 |                 .map(|(k, v)| k.len() + self.calculate_value_size(v))
    |                                         ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion
    = note: `-W clippy::only-used-in-recursion` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::only_used_in_recursion)]`

warning: unused variable: `tx_index`
   --> crates/ledger/src/blockchain/persistence.rs:278:17
    |
278 |         let mut tx_index = 0u32;
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tx_index`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> crates/ledger/src/blockchain/persistence.rs:277:13
    |
277 |         let mut transactions = Vec::new();
    |             ----^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> crates/ledger/src/blockchain/persistence.rs:278:13
    |
278 |         let mut tx_index = 0u32;
    |             ----^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: the borrowed expression implements the required traits
   --> crates/smart_contract/src/interop/contract.rs:316:23
    |
316 |         hasher.update(&nef_checksum.to_le_bytes()); // NEF checksum
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `nef_checksum.to_le_bytes()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
    = note: `-W clippy::needless-borrows-for-generic-args` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrows_for_generic_args)]`

warning: unused variable: `e`
   --> crates/ledger/src/blockchain/persistence.rs:315:25
    |
315 |                     Err(e) => {
    |                         ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: match can be simplified with `.unwrap_or_default()`
  --> crates/smart_contract/src/interop/crypto.rs:56:13
   |
56 | /             match neo_cryptography::ecdsa::ECDsa::verify_signature(&message, signature, public_key)
57 | |             {
58 | |                 Ok(valid) => valid,
59 | |                 Err(_) => false,
60 | |             };
   | |_____________^ help: replace it with: `neo_cryptography::ecdsa::ECDsa::verify_signature(&message, signature, public_key).unwrap_or_default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or_default
   = note: `-W clippy::manual-unwrap-or-default` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::manual_unwrap_or_default)]`

warning: match can be simplified with `.unwrap_or_default()`
   --> crates/smart_contract/src/interop/crypto.rs:280:24
    |
280 |           let is_valid = match neo_cryptography::ecdsa::ECDsa::verify_signature(
    |  ________________________^
281 | |             message, signature, public_key,
282 | |         ) {
283 | |             Ok(valid) => valid,
284 | |             Err(_) => false,
285 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or_default
help: replace it with
    |
280 ~         let is_valid = neo_cryptography::ecdsa::ECDsa::verify_signature(
281 +             message, signature, public_key,
282 ~         ).unwrap_or_default();
    |

warning: match can be simplified with `.unwrap_or_default()`
   --> crates/smart_contract/src/interop/crypto.rs:325:20
    |
325 |       let is_valid = match neo_cryptography::ecdsa::ECDsa::verify_signature_secp256r1(
    |  ____________________^
326 | |         message, signature, public_key,
327 | |     ) {
328 | |         Ok(valid) => valid,
329 | |         Err(_) => false,
330 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or_default
help: replace it with
    |
325 ~     let is_valid = neo_cryptography::ecdsa::ECDsa::verify_signature_secp256r1(
326 +         message, signature, public_key,
327 ~     ).unwrap_or_default();
    |

warning: the borrowed expression implements the required traits
   --> crates/smart_contract/src/interop/runtime.rs:244:23
    |
244 |         hasher.update(&nonce_bytes);
    |                       ^^^^^^^^^^^^ help: change this to: `nonce_bytes`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: large size difference between variants
  --> crates/smart_contract/src/manifest/contract_permission.rs:26:1
   |
26 | / pub enum ContractPermissionDescriptor {
27 | |     /// Wildcard - applies to all contracts.
28 | |     Wildcard(String),
   | |     ---------------- the second-largest variant contains at least 24 bytes
...  |
34 | |     Group(ECPoint),
   | |     -------------- the largest variant contains at least 376 bytes
35 | | }
   | |_^ the entire enum is at least 376 bytes
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant
   = note: `-W clippy::large-enum-variant` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::large_enum_variant)]`
help: consider boxing the large fields to reduce the total size of the enum
   |
34 -     Group(ECPoint),
34 +     Group(Box<ECPoint>),
   |

warning: field assignment outside of initializer for an instance created with Default::default()
  --> crates/smart_contract/src/native/contract_management.rs:78:9
   |
78 |         storage.next_id = 1;
   |         ^^^^^^^^^^^^^^^^^^^^
   |
note: consider initializing the variable with `native::contract_management::ContractStorage { next_id: 1, minimum_deployment_fee: DEFAULT_MINIMUM_DEPLOYMENT_FEE, ..Default::default() }` and removing relevant reassignments
  --> crates/smart_contract/src/native/contract_management.rs:77:9
   |
77 |         let mut storage = ContractStorage::default();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
   = note: `-W clippy::field-reassign-with-default` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::field_reassign_with_default)]`

warning: the borrowed expression implements the required traits
   --> crates/smart_contract/src/native/contract_management.rs:102:23
    |
102 |         hasher.update(&[0xFF]); // Contract prefix
    |                       ^^^^^^^ help: change this to: `[0xFF]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: the borrowed expression implements the required traits
   --> crates/smart_contract/src/native/contract_management.rs:104:23
    |
104 |         hasher.update(&checksum.to_le_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `checksum.to_le_bytes()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: the borrowed expression implements the required traits
   --> crates/smart_contract/src/native/contract_management.rs:129:23
    |
129 |         hasher.update(&nef.compiler.as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `nef.compiler.as_bytes()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: the borrowed expression implements the required traits
   --> crates/smart_contract/src/native/contract_management.rs:130:23
    |
130 |         hasher.update(&nef.source.as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `nef.source.as_bytes()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: accessing first element with `(&value % 256u32)
                         .to_bytes_le()
                         .1.get(0)`
   --> crates/smart_contract/src/native/governance_types.rs:181:24
    |
181 |               let byte = (&value % 256u32)
    |  ________________________^
182 | |                 .to_bytes_le()
183 | |                 .1
184 | |                 .get(0)
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first
    = note: `-W clippy::get-first` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::get_first)]`
help: try
    |
181 ~             let byte = (&value % 256u32)
182 +                 .to_bytes_le()
183 +                 .1.first()
    |

warning: accessing first element with `(&val % 256u32).to_bytes_le().1.get(0)`
   --> crates/smart_contract/src/native/governance_types.rs:372:24
    |
372 |             let byte = (&val % 256u32).to_bytes_le().1.get(0).copied().unwrap_or(0);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(&val % 256u32).to_bytes_le().1.first()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> crates/smart_contract/src/native/neo_token.rs:134:58
    |
134 |         let account_hash = neo_core::UInt160::from_bytes(&account)?;
    |                                                          ^^^^^^^^ help: change this to: `account`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: redundant pattern matching, consider using `is_err()`
   --> crates/smart_contract/src/native/neo_token.rs:386:16
    |
386 |         if let Err(_) = neo_cryptography::ecc::ECPoint::from_bytes(public_key_bytes) {
    |         -------^^^^^^--------------------------------------------------------------- help: try: `if neo_cryptography::ecc::ECPoint::from_bytes(public_key_bytes).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching
    = note: `-W clippy::redundant-pattern-matching` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_pattern_matching)]`

warning: redundant pattern matching, consider using `is_err()`
   --> crates/smart_contract/src/native/neo_token.rs:440:20
    |
440 |             if let Err(_) = neo_cryptography::ecc::ECPoint::from_bytes(candidate_bytes) {
    |             -------^^^^^^-------------------------------------------------------------- help: try: `if neo_cryptography::ecc::ECPoint::from_bytes(candidate_bytes).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: length comparison to zero
   --> crates/smart_contract/src/native/neo_token.rs:776:12
    |
776 |         if bytes.len() > 0 && bytes[bytes.len() - 1] >= 0x80 {
    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!bytes.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `-W clippy::len-zero` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::len_zero)]`

warning: the borrowed expression implements the required traits
    --> crates/smart_contract/src/native/neo_token.rs:1071:28
     |
1071 |         db.put(&state_key, &state_data)
     |                            ^^^^^^^^^^^ help: change this to: `state_data`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: the borrowed expression implements the required traits
    --> crates/smart_contract/src/native/neo_token.rs:1242:34
     |
1242 |         db.put(TOTAL_SUPPLY_KEY, &new_supply.to_le_bytes())
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `new_supply.to_le_bytes()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: use of `unwrap_or_else` to construct default value
   --> crates/smart_contract/src/native/oracle_contract.rs:406:14
    |
406 |             .unwrap_or_else(Vec::new)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default

warning: manual `!RangeInclusive::contains` implementation
   --> crates/smart_contract/src/native/policy_contract.rs:192:12
    |
192 |         if value < 1 || value > 1000 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(1..=1000).contains(&value)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains
    = note: `-W clippy::manual-range-contains` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::manual_range_contains)]`

warning: manual `!RangeInclusive::contains` implementation
   --> crates/smart_contract/src/native/policy_contract.rs:333:12
    |
333 |         if value < 0 || value > 100_000_000 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(0..=100_000_000).contains(&value)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains

warning: manual `!RangeInclusive::contains` implementation
   --> crates/smart_contract/src/native/policy_contract.rs:423:12
    |
423 |         if value < 0 || value > 1_000_000_000 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(0..=1_000_000_000).contains(&value)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains

warning: this can be `std::io::Error::other(_)`
   --> crates/smart_contract/src/lib.rs:125:75
    |
125 |               neo_io::IoError::Operation { operation, reason } => Error::IO(std::io::Error::new(
    |  ___________________________________________________________________________^
126 | |                 std::io::ErrorKind::Other,
127 | |                 format!("{}: {}", operation, reason),
128 | |             )),
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#io_other_error
    = note: `-W clippy::io-other-error` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::io_other_error)]`
help: use `std::io::Error::other`
    |
125 ~             neo_io::IoError::Operation { operation, reason } => Error::IO(std::io::Error::other(
126 ~                 format!("{}: {}", operation, reason),
    |

warning: unused `std::result::Result` that must be used
   --> crates/smart_contract/src/interop/contract.rs:230:9
    |
230 |         engine.emit_event("Deploy", vec![contract_hash.as_bytes().to_vec()]);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
    = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
    |
230 |         let _ = engine.emit_event("Deploy", vec![contract_hash.as_bytes().to_vec()]);
    |         +++++++

warning: unused `std::result::Result` that must be used
  --> crates/smart_contract/src/interop/runtime.rs:74:9
   |
74 | /         _engine.emit_event(
75 | |             "Log",
76 | |             vec![
77 | |                 current_contract.as_bytes().to_vec(),
78 | |                 message.as_bytes().to_vec(),
79 | |             ],
80 | |         );
   | |_________^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
74 |         let _ = _engine.emit_event(
   |         +++++++

warning: hiding a lifetime that's elided elsewhere is confusing
  --> crates/smart_contract/src/manifest/wildcard_container.rs:93:17
   |
93 |     pub fn iter(&self) -> std::slice::Iter<T> {
   |                 ^^^^^     ------------------- the same lifetime is hidden here
   |                 |
   |                 the lifetime is elided here
   |
   = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
   = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default
help: use `'_` for type paths
   |
93 |     pub fn iter(&self) -> std::slice::Iter<'_, T> {
   |                                            +++

warning: unused `std::result::Result` that must be used
   --> crates/smart_contract/src/native/gas_token.rs:298:9
    |
298 | /         engine.emit_event(
299 | |             "Transfer",
300 | |             vec![
301 | |                 vec![],                        // from: null (mint)
...   |
304 | |             ],
305 | |         );
    | |_________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
298 |         let _ = engine.emit_event(
    |         +++++++

warning: unused `std::result::Result` that must be used
   --> crates/smart_contract/src/native/gas_token.rs:380:9
    |
380 | /         engine.emit_event(
381 | |             "Transfer",
382 | |             vec![
383 | |                 account.to_vec(),              // from: account
...   |
386 | |             ],
387 | |         );
    | |_________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
380 |         let _ = engine.emit_event(
    |         +++++++

warning: unused `std::result::Result` that must be used
   --> crates/smart_contract/src/native/gas_token.rs:436:9
    |
436 | /         engine.emit_event(
437 | |             "FeeBurned",
438 | |             vec![
439 | |                 amount.to_le_bytes().to_vec(), // amount
440 | |             ],
441 | |         );
    | |_________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
436 |         let _ = engine.emit_event(
    |         +++++++

warning: unused `std::result::Result` that must be used
   --> crates/smart_contract/src/native/gas_token.rs:511:9
    |
511 | /         engine.emit_event(
512 | |             "ValidatorReward",
513 | |             vec![
514 | |                 validator.to_vec(),            // validator
515 | |                 amount.to_le_bytes().to_vec(), // amount
516 | |             ],
517 | |         );
    | |_________^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
511 |         let _ = engine.emit_event(
    |         +++++++

warning: unused `std::result::Result` that must be used
   --> crates/smart_contract/src/native/neo_token.rs:360:9
    |
360 |         engine.emit_event("CandidateRegistered", vec![public_key.to_vec()]);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
360 |         let _ = engine.emit_event("CandidateRegistered", vec![public_key.to_vec()]);
    |         +++++++

warning: `neo-smart-contract` (lib) generated 114 warnings (run `cargo clippy --fix --lib -p neo-smart-contract` to apply 63 suggestions)
warning: unused import: `Digest`
   --> crates/ledger/src/block/block.rs:519:20
    |
519 |         use sha2::{Digest, Sha256};
    |                    ^^^^^^

warning: unused import: `Digest`
  --> crates/ledger/src/block/verification.rs:18:12
   |
18 | use sha2::{Digest, Sha256};
   |            ^^^^^^

warning: unused import: `Digest`
  --> crates/ledger/src/block/mod.rs:38:20
   |
38 |         use sha2::{Digest, Sha256};
   |                    ^^^^^^

warning: unreachable pattern
   --> crates/ledger/src/block/block.rs:265:13
    |
265 |             _ => {
    |             ^ no value can reach this
    |
note: multiple earlier patterns match some of the same values
   --> crates/ledger/src/block/block.rs:265:13
    |
249 |             neo_core::TransactionAttributeType::HighPriority => {
    |             ------------------------------------------------ matches some of the same values
...
253 |             neo_core::TransactionAttributeType::OracleResponse => {
    |             -------------------------------------------------- matches some of the same values
...
257 |             neo_core::TransactionAttributeType::NotValidBefore => {
    |             -------------------------------------------------- matches some of the same values
...
261 |             neo_core::TransactionAttributeType::Conflicts => {
    |             --------------------------------------------- matches some of the same values
...
265 |             _ => {
    |             ^ collectively making this unreachable
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unused variable: `transaction`
   --> crates/ledger/src/block/block.rs:701:9
    |
701 |         transaction: &Transaction,
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction`

warning: unused variable: `transaction`
   --> crates/ledger/src/block/block.rs:833:9
    |
833 |         transaction: &Transaction,
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction`

warning: unused variable: `engine`
   --> crates/ledger/src/block/verification.rs:714:25
    |
714 |         if let Some(mut engine) = self.get_application_engine() {
    |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: variable does not need to be mutable
   --> crates/ledger/src/block/verification.rs:714:21
    |
714 |         if let Some(mut engine) = self.get_application_engine() {
    |                     ----^^^^^^
    |                     |
    |                     help: remove this `mut`

warning: unused variable: `index`
   --> crates/ledger/src/blockchain/persistence.rs:425:13
    |
425 |         let index =
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_index`

warning: unused variable: `value`
   --> crates/ledger/src/blockchain/state.rs:968:51
    |
968 |             neo_core::WitnessCondition::Boolean { value } => {
    |                                                   ^^^^^ help: try ignoring the field: `value: _`

warning: unused variable: `storage_key_string`
    --> crates/ledger/src/blockchain/state.rs:1514:13
     |
1514 |         let storage_key_string = format!(
     |             ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_storage_key_string`

warning: unused variable: `candidate_prefix`
    --> crates/ledger/src/blockchain/state.rs:1582:13
     |
1582 |         let candidate_prefix = b"candidate:".to_vec(); // NEO contract candidate prefix
     |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_candidate_prefix`

warning: methods `calculate_script_hash`, `is_valid_witness_script`, and `validate_transaction_uniqueness` are never used
   --> crates/ledger/src/block/block.rs:517:8
    |
27  | impl Block {
    | ---------- methods in this implementation
...
517 |     fn calculate_script_hash(&self, script: &[u8]) -> neo_core::UInt160 {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
591 |     fn is_valid_witness_script(&self, script: &[u8]) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
617 |     fn validate_transaction_uniqueness(&self) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: methods `verify_ecdsa_signature`, `extract_signature_from_invocation`, `extract_public_key_from_verification`, `verify_secp256r1_ecdsa_signature_production`, `validate_signature_component_range`, and `execute_p256_ecdsa_signature_verification` are never used
   --> crates/ledger/src/block/verification.rs:396:8
    |
23  | impl WitnessVerifier {
    | -------------------- methods in this implementation
...
396 |     fn verify_ecdsa_signature(&self, witness: &Witness, message_hash: &UInt256) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
419 |     fn extract_signature_from_invocation(&self, invocation_script: &[u8]) -> Option<Vec<u8>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
432 |     fn extract_public_key_from_verification(&self, verification_script: &[u8]) -> Option<Vec<u8>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
445 |     fn verify_secp256r1_ecdsa_signature_production(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
477 |     fn validate_signature_component_range(&self, component: &[u8]) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
509 |     fn execute_p256_ecdsa_signature_verification(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `GENESIS_TIMESTAMP_MS` is never used
 --> crates/ledger/src/blockchain/genesis.rs:7:7
  |
7 | const GENESIS_TIMESTAMP_MS: u64 = 1468595301000;
  |       ^^^^^^^^^^^^^^^^^^^^

warning: associated items `new` and `mark_dirty` are never used
  --> crates/ledger/src/blockchain/persistence.rs:42:8
   |
40 | impl CacheItem {
   | -------------- associated items in this implementation
41 |     /// Creates a new cache item
42 |     fn new(item: StorageItem) -> Self {
   |        ^^^
...
69 |     fn mark_dirty(&mut self) {
   |        ^^^^^^^^^^

warning: methods `get_transaction_sign_data`, `get_network_magic`, `get_default_committee`, `create_minimal_committee`, and `cache_committee` are never used
    --> crates/ledger/src/blockchain/state.rs:1151:8
     |
177  | impl BlockchainState {
     | -------------------- methods in this implementation
...
1151 |     fn get_transaction_sign_data(&self, transaction: &Transaction) -> Result<Vec<u8>> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1167 |     fn get_network_magic(&self) -> u32 {
     |        ^^^^^^^^^^^^^^^^^
...
1254 |     fn get_default_committee(&self) -> Vec<neo_cryptography::ECPoint> {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
1295 |     fn create_minimal_committee(&self) -> Vec<neo_cryptography::ECPoint> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
1311 |     async fn cache_committee(&mut self, members: Vec<neo_cryptography::ECPoint>) -> Result<()> {
     |              ^^^^^^^^^^^^^^^

warning: methods `create_multisig_redeem_script_from_committee` and `create_multisig_redeem_script_from_next_validators` are never used
   --> crates/ledger/src/blockchain/verification.rs:279:8
    |
38  | impl BlockchainVerifier {
    | ----------------------- methods in this implementation
...
279 |     fn create_multisig_redeem_script_from_committee(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
289 |     fn create_multisig_redeem_script_from_next_validators(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: module has the same name as its containing module
  --> crates/ledger/src/block/mod.rs:12:1
   |
12 | pub mod block;
   | ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception
   = note: `-W clippy::module-inception` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::module_inception)]`

warning: the borrowed expression implements the required traits
   --> crates/ledger/src/block/block.rs:526:30
    |
526 |         ripemd_hasher.update(&sha256_result);
    |                              ^^^^^^^^^^^^^^ help: change this to: `sha256_result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
    = note: `-W clippy::needless-borrows-for-generic-args` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrows_for_generic_args)]`

warning: this function has too many arguments (8/7)
  --> crates/ledger/src/block/header.rs:53:5
   |
53 | /     pub fn new(
54 | |         version: u32,
55 | |         previous_hash: UInt256,
56 | |         merkle_root: UInt256,
...  |
61 | |         next_consensus: UInt160,
62 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments
   = note: `-W clippy::too-many-arguments` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::too_many_arguments)]`

warning: the borrowed expression implements the required traits
   --> crates/ledger/src/block/header.rs:105:23
    |
105 |         hasher.update(&first_hash);
    |                       ^^^^^^^^^^^ help: change this to: `first_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: returning the result of a `let` binding from a block
   --> crates/ledger/src/block/header.rs:177:9
    |
170 |         let default_validators_count = 7; // Neo N3 default
    |         --------------------------------- unnecessary `let` binding
...
177 |         default_validators_count
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
    = note: `-W clippy::let-and-return` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::let_and_return)]`
help: return the expression directly
    |
170 ~          // Neo N3 default
171 |
...
176 |         // 3. Return configured validators count
177 ~         7
    |

warning: this `if` statement can be collapsed
   --> crates/ledger/src/block/verification.rs:141:13
    |
141 | /             if sig_index < public_keys.len() {
142 | |                 if self.verify_ecdsa_signature_raw(signature, &public_keys[sig_index], message_hash)
143 | |                 {
144 | |                     valid_signatures += 1;
145 | |                 }
146 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
    = note: `-W clippy::collapsible-if` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::collapsible_if)]`
help: collapse nested if block
    |
141 ~             if sig_index < public_keys.len()
142 ~                 && self.verify_ecdsa_signature_raw(signature, &public_keys[sig_index], message_hash)
143 |                 {
144 |                     valid_signatures += 1;
145 ~                 }
    |

warning: the borrowed expression implements the required traits
   --> crates/ledger/src/block/verification.rs:298:30
    |
298 |         ripemd_hasher.update(&sha256_result);
    |                              ^^^^^^^^^^^^^^ help: change this to: `sha256_result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: match can be simplified with `.unwrap_or_default()`
   --> crates/ledger/src/block/verification.rs:376:9
    |
376 | /         match neo_cryptography::ecdsa::ECDsa::verify_signature(
377 | |             &message_hash.as_bytes(),
378 | |             signature,
379 | |             public_key,
...   |
382 | |             Err(_) => false,
383 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or_default
    = note: `-W clippy::manual-unwrap-or-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::manual_unwrap_or_default)]`
help: replace it with
    |
376 ~         neo_cryptography::ecdsa::ECDsa::verify_signature(
377 +             &message_hash.as_bytes(),
378 +             signature,
379 +             public_key,
380 +         ).unwrap_or_default()
    |

warning: the borrowed expression implements the required traits
  --> crates/ledger/src/block/mod.rs:45:30
   |
45 |         ripemd_hasher.update(&sha256_result);
   |                              ^^^^^^^^^^^^^^ help: change this to: `sha256_result`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: module has the same name as its containing module
  --> crates/ledger/src/blockchain/mod.rs:12:1
   |
12 | pub mod blockchain;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:509:24
    |
509 |                 .entry(block.header.previous_hash.clone())
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `block.header.previous_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::clone_on_copy)]`

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:556:24
    |
556 |         let mut hash = fork_hash.clone();
    |                        ^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*fork_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:565:24
    |
565 |                 hash = block.header.previous_hash.clone();
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `block.header.previous_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:588:32
    |
588 |         let mut current_hash = tip.header.previous_hash.clone();
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `tip.header.previous_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:596:32
    |
596 |                 current_hash = block.header.previous_hash.clone();
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `block.header.previous_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:605:36
    |
605 |                     current_hash = block.header.previous_hash.clone();
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `block.header.previous_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `UInt256` which implements the `Copy` trait
   --> crates/ledger/src/blockchain/blockchain.rs:702:43
    |
702 |         let mut orphans_to_process = vec![parent_hash.clone()];
    |                                           ^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*parent_hash`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:381:16
    |
381 |         if let Err(_) = self.validate_transaction_basic_structure(transaction) {
    |         -------^^^^^^--------------------------------------------------------- help: try: `if self.validate_transaction_basic_structure(transaction).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching
    = note: `-W clippy::redundant-pattern-matching` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_pattern_matching)]`

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:386:16
    |
386 |         if let Err(_) = self.validate_transaction_policy(transaction).await {
    |         -------^^^^^^------------------------------------------------------ help: try: `if (self.validate_transaction_policy(transaction).await).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:391:16
    |
391 |         if let Err(_) = self.validate_transaction_fees(transaction).await {
    |         -------^^^^^^---------------------------------------------------- help: try: `if (self.validate_transaction_fees(transaction).await).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:396:16
    |
396 |         if let Err(_) = self.validate_transaction_attributes(transaction) {
    |         -------^^^^^^---------------------------------------------------- help: try: `if self.validate_transaction_attributes(transaction).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:401:16
    |
401 |         if let Err(_) = self.validate_transaction_signers(transaction) {
    |         -------^^^^^^------------------------------------------------- help: try: `if self.validate_transaction_signers(transaction).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:406:16
    |
406 |         if let Err(_) = self.validate_transaction_script(transaction) {
    |         -------^^^^^^------------------------------------------------ help: try: `if self.validate_transaction_script(transaction).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:411:16
    |
411 |         if let Err(_) = self.validate_transaction_witnesses(transaction).await {
    |         -------^^^^^^--------------------------------------------------------- help: try: `if (self.validate_transaction_witnesses(transaction).await).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/state.rs:416:16
    |
416 |         if let Err(_) = self.validate_transaction_state_dependent(transaction).await {
    |         -------^^^^^^--------------------------------------------------------------- help: try: `if (self.validate_transaction_state_dependent(transaction).await).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: this `else { if .. }` block can be collapsed
   --> crates/ledger/src/blockchain/state.rs:878:16
    |
878 |           } else {
    |  ________________^
879 | |             if !signer.allowed_contracts.is_empty() {
880 | |                 return Err(Error::Validation(
881 | |                     "allowed_contracts specified without CustomContracts scope".to_string(),
...   |
884 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
    = note: `-W clippy::collapsible-else-if` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::collapsible_else_if)]`
help: collapse nested if block
    |
878 ~         } else if !signer.allowed_contracts.is_empty() {
879 +             return Err(Error::Validation(
880 +                 "allowed_contracts specified without CustomContracts scope".to_string(),
881 +             ));
882 +         }
    |

warning: this `else { if .. }` block can be collapsed
   --> crates/ledger/src/blockchain/state.rs:910:16
    |
910 |           } else {
    |  ________________^
911 | |             if !signer.allowed_groups.is_empty() {
912 | |                 return Err(Error::Validation(
913 | |                     "allowed_groups specified without CustomGroups scope".to_string(),
...   |
916 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
910 ~         } else if !signer.allowed_groups.is_empty() {
911 +             return Err(Error::Validation(
912 +                 "allowed_groups specified without CustomGroups scope".to_string(),
913 +             ));
914 +         }
    |

warning: this `else { if .. }` block can be collapsed
   --> crates/ledger/src/blockchain/state.rs:933:16
    |
933 |           } else {
    |  ________________^
934 | |             if !signer.rules.is_empty() {
935 | |                 return Err(Error::Validation(
936 | |                     "witness rules specified without Rules scope".to_string(),
...   |
939 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
933 ~         } else if !signer.rules.is_empty() {
934 +             return Err(Error::Validation(
935 +                 "witness rules specified without Rules scope".to_string(),
936 +             ));
937 +         }
    |

warning: parameter is only used in recursion
   --> crates/ledger/src/blockchain/state.rs:966:36
    |
966 |     fn validate_witness_condition(&self, condition: &neo_core::WitnessCondition) -> Result<()> {
    |                                    ^^^^
    |
note: parameter used here
   --> crates/ledger/src/blockchain/state.rs:974:17
    |
974 |                 self.validate_witness_condition(condition)?;
    |                 ^^^^
...
985 |                     self.validate_witness_condition(cond)?;
    |                     ^^^^
...
997 |                     self.validate_witness_condition(cond)?;
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion
    = note: `-W clippy::only-used-in-recursion` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::only_used_in_recursion)]`

warning: match can be simplified with `.unwrap_or_default()`
    --> crates/ledger/src/blockchain/state.rs:1482:9
     |
1482 | /         match self.try_get_current_height_from_persistence() {
1483 | |             Ok(height) => height,
1484 | |             Err(_) => {
...    |
1488 | |         }
     | |_________^ help: replace it with: `self.try_get_current_height_from_persistence().unwrap_or_default()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or_default

warning: redundant pattern matching, consider using `is_err()`
  --> crates/ledger/src/blockchain/verification.rs:50:16
   |
50 |         if let Err(_) = self.validate_transaction_basic(transaction) {
   |         -------^^^^^^----------------------------------------------- help: try: `if self.validate_transaction_basic(transaction).is_err()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
  --> crates/ledger/src/blockchain/verification.rs:55:16
   |
55 |         if let Err(_) = self.verify_transaction_witnesses(transaction).await {
   |         -------^^^^^^------------------------------------------------------- help: try: `if (self.verify_transaction_witnesses(transaction).await).is_err()`
   |
   = note: this will change drop order of the result, as well as all temporaries
   = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
  --> crates/ledger/src/blockchain/verification.rs:60:16
   |
60 |         if let Err(_) = self.check_transaction_policy(transaction) {
   |         -------^^^^^^--------------------------------------------- help: try: `if self.check_transaction_policy(transaction).is_err()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
  --> crates/ledger/src/blockchain/verification.rs:75:16
   |
75 |         if let Err(_) = self.validate_header_basic(header) {
   |         -------^^^^^^------------------------------------- help: try: `if self.validate_header_basic(header).is_err()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
  --> crates/ledger/src/blockchain/verification.rs:80:16
   |
80 |         if let Err(_) = self.verify_header_witnesses(header).await {
   |         -------^^^^^^--------------------------------------------- help: try: `if (self.verify_header_witnesses(header).await).is_err()`
   |
   = note: this will change drop order of the result, as well as all temporaries
   = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/verification.rs:127:20
    |
127 |             if let Err(_) = self.verify_witness(transaction, witness, index).await {
    |             -------^^^^^^--------------------------------------------------------- help: try: `if (self.verify_witness(transaction, witness, index).await).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/verification.rs:155:16
    |
155 |         if let Err(_) = engine.load_script(script, -1, 0) {
    |         -------^^^^^^------------------------------------ help: try: `if engine.load_script(script, -1, 0).is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> crates/ledger/src/blockchain/verification.rs:166:20
    |
166 |             if let Err(_) = engine.load_script(invocation_script, 0, 0) {
    |             -------^^^^^^---------------------------------------------- help: try: `if engine.load_script(invocation_script, 0, 0).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: length comparison to zero
   --> crates/ledger/src/blockchain/verification.rs:180:20
    |
180 |                 if engine.result_stack().len() == 0 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `engine.result_stack().is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `-W clippy::len-zero` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::len_zero)]`

warning: the following explicit lifetimes could be elided: 'a
   --> crates/ledger/src/header_cache.rs:108:6
    |
108 | impl<'a> IntoIterator for &'a HeaderCache {
    |      ^^                    ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes
    = note: `-W clippy::needless-lifetimes` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_lifetimes)]`
help: elide the lifetimes
    |
108 - impl<'a> IntoIterator for &'a HeaderCache {
108 + impl IntoIterator for &HeaderCache {
    |

warning: this `if` statement can be collapsed
   --> crates/ledger/src/mempool.rs:404:9
    |
404 | /         if !self.can_add_transaction(&transaction, high_priority)? {
405 | |             if !self.try_make_space(&transaction, high_priority)? {
406 | |                 debug!("Cannot add transaction {}, pool is full", tx_hash);
407 | |                 return Ok(false);
408 | |             }
409 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
404 ~         if !self.can_add_transaction(&transaction, high_priority)?
405 ~             && !self.try_make_space(&transaction, high_priority)? {
406 |                 debug!("Cannot add transaction {}, pool is full", tx_hash);
407 |                 return Ok(false);
408 ~             }
    |

warning: redundant pattern matching, consider using `is_some()`
   --> crates/ledger/src/mempool.rs:520:24
    |
520 |                 if let Some(_) = self.try_remove(&tx_hash)? {
    |                 -------^^^^^^^----------------------------- help: try: `if (self.try_remove(&tx_hash)?).is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: this `impl` can be derived
  --> crates/ledger/src/verify_result.rs:44:1
   |
44 | / impl Default for VerifyResult {
45 | |     fn default() -> Self {
46 | |         VerifyResult::Unknown
47 | |     }
48 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls
   = note: `-W clippy::derivable-impls` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::derivable_impls)]`
help: replace the manual implementation with a derive attribute and mark the default variant
   |
9  + #[derive(Default)]
10 ~ pub enum VerifyResult {
11 |     /// Indicates that the verification was successful
...
41 |     /// Indicates that the inventory failed to verify due to other reasons
42 ~     #[default]
43 ~     Unknown,
   |

warning: `neo-ledger` (lib) generated 85 warnings (run `cargo clippy --fix --lib -p neo-ledger` to apply 53 suggestions)
    Checking neo-network v0.3.0 (/home/ubuntu/neo-rs/crates/network)
    Checking neo-rpc-server v0.3.0 (/home/ubuntu/neo-rs/crates/rpc_server)
    Checking neo-node v0.3.0 (/home/ubuntu/neo-rs/node)
    Checking neo-plugins v0.1.0 (/home/ubuntu/neo-rs/crates/plugins)
warning: unused import: `error`
  --> crates/rpc_server/src/lib.rs:11:15
   |
11 | use tracing::{error, info, warn};
   |               ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `warn`
  --> crates/rpc_server/src/methods.rs:11:22
   |
11 | use tracing::{debug, warn};
   |                      ^^^^

warning: unused import: `RpcPeer`
  --> crates/rpc_server/src/methods.rs:19:15
   |
19 |     RpcBlock, RpcPeer, RpcPeers, RpcSigner, RpcTransaction, RpcVersion, RpcWitness,
   |               ^^^^^^^

warning: unused imports: `DateTime` and `Utc`
  --> crates/plugins/src/application_logs.rs:10:14
   |
10 | use chrono::{DateTime, Utc};
   |              ^^^^^^^^  ^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `UInt160` and `UInt256`
  --> crates/plugins/src/application_logs.rs:11:16
   |
11 | use neo_core::{UInt160, UInt256};
   |                ^^^^^^^  ^^^^^^^

warning: unused import: `neo_vm::stack_item::StackItem`
  --> crates/plugins/src/application_logs.rs:13:5
   |
13 | use neo_vm::stack_item::StackItem;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> crates/plugins/src/application_logs.rs:16:5
   |
16 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `error`
  --> crates/plugins/src/application_logs.rs:20:22
   |
20 | use tracing::{debug, error, info, warn};
   |                      ^^^^^

warning: unused imports: `UInt160` and `UInt256`
  --> crates/plugins/src/oracle_service.rs:11:16
   |
11 | use neo_core::{UInt160, UInt256};
   |                ^^^^^^^  ^^^^^^^

warning: unused import: `std::path::PathBuf`
  --> crates/plugins/src/oracle_service.rs:16:5
   |
16 | use std::path::PathBuf;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> crates/plugins/src/oracle_service.rs:22:5
   |
22 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused imports: `UInt160` and `UInt256`
  --> crates/plugins/src/sqlite_wallet.rs:12:16
   |
12 | use neo_core::{UInt160, UInt256};
   |                ^^^^^^^  ^^^^^^^

warning: unused import: `ExtensionError`
  --> crates/plugins/src/sqlite_wallet.rs:13:29
   |
13 | use neo_extensions::error::{ExtensionError, ExtensionResult};
   |                             ^^^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> crates/plugins/src/sqlite_wallet.rs:14:13
   |
14 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `Path`
  --> crates/plugins/src/sqlite_wallet.rs:16:17
   |
16 | use std::path::{Path, PathBuf};
   |                 ^^^^

warning: unused import: `tempfile::tempdir`
  --> crates/plugins/src/sqlite_wallet.rs:18:5
   |
18 | use tempfile::tempdir;
   |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, and `warn`
  --> crates/plugins/src/sqlite_wallet.rs:20:15
   |
20 | use tracing::{debug, error, info, warn};
   |               ^^^^^  ^^^^^        ^^^^

warning: unused imports: `DateTime` and `Utc`
  --> crates/plugins/src/state_service.rs:10:14
   |
10 | use chrono::{DateTime, Utc};
   |              ^^^^^^^^  ^^^

warning: unused imports: `UInt160` and `UInt256`
  --> crates/plugins/src/state_service.rs:12:16
   |
12 | use neo_core::{UInt160, UInt256};
   |                ^^^^^^^  ^^^^^^^

warning: unused import: `IteratorMode`
  --> crates/plugins/src/state_service.rs:14:15
   |
14 | use rocksdb::{IteratorMode, Options, DB};
   |               ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> crates/plugins/src/state_service.rs:16:5
   |
16 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `error`
  --> crates/plugins/src/state_service.rs:20:22
   |
20 | use tracing::{debug, error, info, warn};
   |                      ^^^^^

warning: unused import: `DateTime`
  --> crates/plugins/src/storage_dumper.rs:11:14
   |
11 | use chrono::{DateTime, Utc};
   |              ^^^^^^^^

warning: unused imports: `UInt160` and `UInt256`
  --> crates/plugins/src/storage_dumper.rs:12:16
   |
12 | use neo_core::{UInt160, UInt256};
   |                ^^^^^^^  ^^^^^^^

warning: unused import: `tempfile::tempdir`
  --> crates/plugins/src/storage_dumper.rs:18:5
   |
18 | use tempfile::tempdir;
   |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `DateTime` and `Utc`
  --> crates/plugins/src/tokens_tracker.rs:11:14
   |
11 | use chrono::{DateTime, Utc};
   |              ^^^^^^^^  ^^^

warning: unused imports: `UInt160` and `UInt256`
  --> crates/plugins/src/tokens_tracker.rs:12:16
   |
12 | use neo_core::{UInt160, UInt256};
   |                ^^^^^^^  ^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> crates/plugins/src/tokens_tracker.rs:16:5
   |
16 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tempfile::tempdir`
  --> crates/plugins/src/tokens_tracker.rs:19:5
   |
19 | use tempfile::tempdir;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `error`
  --> crates/plugins/src/tokens_tracker.rs:21:22
   |
21 | use tracing::{debug, error, info, warn};
   |                      ^^^^^

warning: unused variable: `shutdown`
  --> node/src/main.rs:71:9
   |
71 |     let shutdown = ShutdownCoordinator::new();
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `blockchain`
   --> node/src/main.rs:134:13
    |
134 |         let blockchain = blockchain.clone();
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_blockchain`

error[E0277]: `neo_persistence::RocksDbStore` doesn't implement `std::fmt::Debug`
  --> crates/rpc_server/src/methods.rs:26:5
   |
23 | #[derive(Clone, Debug)]
   |                 ----- in this derive macro expansion
...
26 |     storage: Arc<RocksDbStore>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::fmt::Debug` is not implemented for `neo_persistence::RocksDbStore`
   |
   = help: the trait `std::fmt::Debug` is implemented for `std::sync::Arc<T, A>`

error: documentation comments cannot be applied to function parameters
   --> crates/network/src/transaction_relay.rs:159:9
    |
159 |         /// Source peer address
    |         ^^^^^^^^^^^^^^^^^^^^^^^ doc comments are not allowed here

error: documentation comments cannot be applied to function parameters
   --> crates/network/src/transaction_relay.rs:290:9
    |
290 |         /// Source peer address
    |         ^^^^^^^^^^^^^^^^^^^^^^^ doc comments are not allowed here

error: documentation comments cannot be applied to function parameters
   --> crates/network/src/transaction_relay.rs:339:9
    |
339 |         /// Source peer address
    |         ^^^^^^^^^^^^^^^^^^^^^^^ doc comments are not allowed here

error[E0277]: `neo_persistence::RocksDbStore` doesn't implement `std::fmt::Debug`
  --> crates/rpc_server/src/lib.rs:25:5
   |
21 | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
25 |     storage: Arc<RocksDbStore>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::fmt::Debug` is not implemented for `neo_persistence::RocksDbStore`
   |
   = help: the trait `std::fmt::Debug` is implemented for `std::sync::Arc<T, A>`

warning: this `if` has identical blocks
  --> node/src/main.rs:80:26
   |
80 |       } else if is_testnet {
   |  __________________________^
81 | |         NetworkType::TestNet
82 | |     } else {
   | |_____^
   |
note: same as this
  --> node/src/main.rs:82:12
   |
82 |       } else {
   |  ____________^
83 | |         NetworkType::TestNet
84 | |     };
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else
   = note: `-W clippy::if-same-then-else` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::if_same_then_else)]`

warning: unused variable: `root_hash`
   --> crates/plugins/src/state_service.rs:193:9
    |
193 |         root_hash: &str,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_root_hash`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused imports: `NetworkMessage` and `PeerEvent`
 --> crates/network/src/error_handling.rs:6:27
  |
6 | use crate::{NetworkError, NetworkMessage, NetworkResult as Result, PeerEvent};
  |                           ^^^^^^^^^^^^^^                           ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `error`
  --> crates/network/src/error_handling.rs:15:22
   |
15 | use tracing::{debug, error, info, warn};
   |                      ^^^^^

warning: unused import: `warn`
 --> crates/network/src/handlers/transaction_handler.rs:9:22
  |
9 | use tracing::{debug, warn};
  |                      ^^^^

warning: unused import: `neo_config::MAX_SCRIPT_SIZE`
 --> crates/network/src/messages/header.rs:8:5
  |
8 | use neo_config::MAX_SCRIPT_SIZE;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

For more information about this error, try `rustc --explain E0277`.
warning: unused import: `MAX_SCRIPT_LENGTH`
 --> crates/network/src/messages/protocol.rs:7:43
  |
7 | use neo_config::{ADDRESS_SIZE, HASH_SIZE, MAX_SCRIPT_LENGTH, MAX_SCRIPT_SIZE};
  |                                           ^^^^^^^^^^^^^^^^^

warning: unnecessary `>= y + 1` or `x - 1 >=`
   --> crates/network/src/messages/protocol.rs:486:36
    |
486 |                     let relay = if bytes.len() >= cursor + 1 {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change it to: `bytes.len() > cursor`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#int_plus_one
    = note: `-W clippy::int-plus-one` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::int_plus_one)]`

warning: unused import: `MAX_SCRIPT_SIZE`
 --> crates/network/src/messages/validation.rs:7:18
  |
7 | use neo_config::{MAX_SCRIPT_SIZE, MILLISECONDS_PER_BLOCK};
  |                  ^^^^^^^^^^^^^^^

warning: unused import: `UInt160`
  --> crates/network/src/messages/validation.rs:12:29
   |
12 | use neo_core::{Transaction, UInt160, UInt256};
   |                             ^^^^^^^

warning: unused import: `error`
  --> crates/network/src/messages/validation.rs:16:22
   |
16 | use tracing::{debug, error, warn};
   |                      ^^^^^

warning: `neo-rpc-server` (lib) generated 3 warnings
error: could not compile `neo-rpc-server` (lib) due to 2 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: unused import: `Serializable`
  --> crates/network/src/messages/mod.rs:23:46
   |
23 |     use neo_io::{BinaryWriter, MemoryReader, Serializable};
   |                                              ^^^^^^^^^^^^

warning: unused imports: `NetworkError` and `NetworkMessage as Message`
 --> crates/network/src/p2p/events.rs:5:13
  |
5 | use crate::{NetworkError, NetworkMessage as Message};
  |             ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::ADDRESS_SIZE`
 --> crates/network/src/p2p/events.rs:7:5
  |
7 | use neo_config::ADDRESS_SIZE;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
 --> crates/network/src/p2p/events.rs:8:5
  |
8 | use neo_config::DEFAULT_NEO_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_RPC_PORT`
 --> crates/network/src/p2p/events.rs:9:5
  |
9 | use neo_config::DEFAULT_RPC_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_PORT`
  --> crates/network/src/p2p/events.rs:10:5
   |
10 | use neo_config::DEFAULT_TESTNET_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
  --> crates/network/src/p2p/events.rs:11:5
   |
11 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `NetworkConfig` and `P2pNode`
 --> crates/network/src/p2p/local_test_framework.rs:7:5
  |
7 |     NetworkConfig, NetworkError, NetworkMessage, NetworkResult as Result, P2pNode, ProtocolMessage,
  |     ^^^^^^^^^^^^^                                                         ^^^^^^^

warning: unused import: `Blockchain`
  --> crates/network/src/p2p/local_test_framework.rs:11:38
   |
11 | use neo_ledger::{Block, BlockHeader, Blockchain};
   |                                      ^^^^^^^^^^

warning: unused import: `broadcast`
  --> crates/network/src/p2p/local_test_framework.rs:15:19
   |
15 | use tokio::sync::{broadcast, mpsc, RwLock};
   |                   ^^^^^^^^^

warning: unused imports: `NetworkError as Error` and `NetworkResult as Result`
 --> crates/network/src/p2p/protocol.rs:6:13
  |
6 | use crate::{NetworkError as Error, NetworkResult as Result};
  |             ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
 --> crates/network/src/p2p/protocol.rs:7:5
  |
7 | use neo_config::DEFAULT_NEO_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_RPC_PORT`
 --> crates/network/src/p2p/protocol.rs:8:5
  |
8 | use neo_config::DEFAULT_RPC_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_PORT`
 --> crates/network/src/p2p/protocol.rs:9:5
  |
9 | use neo_config::DEFAULT_TESTNET_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
  --> crates/network/src/p2p/protocol.rs:10:5
   |
10 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::ADDRESS_SIZE`
  --> crates/network/src/p2p_node.rs:13:5
   |
13 | use neo_config::ADDRESS_SIZE;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `UInt256`
  --> crates/network/src/p2p_node.rs:14:25
   |
14 | use neo_core::{UInt160, UInt256};
   |                         ^^^^^^^

warning: `neo-node` (bin "neo-node") generated 3 warnings
warning: unused import: `crate::messages::commands::varlen`
 --> crates/network/src/peer_manager.rs:6:5
  |
6 | use crate::messages::commands::varlen;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::messages::header::Neo3Message`
 --> crates/network/src/peer_manager.rs:7:5
  |
7 | use crate::messages::header::Neo3Message;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `UInt256`
  --> crates/network/src/peer_manager.rs:16:25
   |
16 | use neo_core::{UInt160, UInt256};
   |                         ^^^^^^^

warning: unused imports: `IpAddr` and `Ipv4Addr`
  --> crates/network/src/peer_manager.rs:19:16
   |
19 | use std::net::{IpAddr, Ipv4Addr};
   |                ^^^^^^  ^^^^^^^^

warning: redundant field names in struct initialization
   --> crates/network/src/peer_manager.rs:254:29
    |
254 | ...                   address: address,
    |                       ^^^^^^^^^^^^^^^^ help: replace it with: `address`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names
    = note: `-W clippy::redundant-field-names` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_field_names)]`

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
 --> crates/network/src/peers.rs:8:5
  |
8 | use neo_config::DEFAULT_NEO_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_RPC_PORT`
 --> crates/network/src/peers.rs:9:5
  |
9 | use neo_config::DEFAULT_RPC_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_PORT`
  --> crates/network/src/peers.rs:10:5
   |
10 | use neo_config::DEFAULT_TESTNET_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
  --> crates/network/src/peers.rs:11:5
   |
11 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HashSet`
  --> crates/network/src/peers.rs:14:33
   |
14 | use std::collections::{HashMap, HashSet};
   |                                 ^^^^^^^

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
  --> crates/network/src/rpc.rs:13:5
   |
13 | use neo_config::DEFAULT_NEO_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_RPC_PORT`
  --> crates/network/src/rpc.rs:14:5
   |
14 | use neo_config::DEFAULT_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_PORT`
  --> crates/network/src/rpc.rs:15:5
   |
15 | use neo_config::DEFAULT_TESTNET_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
  --> crates/network/src/rpc.rs:16:5
   |
16 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Block`
  --> crates/network/src/rpc.rs:20:18
   |
20 | use neo_ledger::{Block, Blockchain};
   |                  ^^^^^

warning: unused import: `PeerManager`
  --> crates/network/src/server.rs:11:78
   |
11 |     NetworkConfig, NetworkError, NetworkStats, P2PConfig, P2PEvent, P2pNode, PeerManager, Result,
   |                                                                              ^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
  --> crates/network/src/server.rs:14:5
   |
14 | use neo_config::DEFAULT_NEO_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_RPC_PORT`
  --> crates/network/src/server.rs:15:5
   |
15 | use neo_config::DEFAULT_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_PORT`
  --> crates/network/src/server.rs:16:5
   |
16 | use neo_config::DEFAULT_TESTNET_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
  --> crates/network/src/server.rs:17:5
   |
17 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Ledger`
  --> crates/network/src/server.rs:19:30
   |
19 | use neo_ledger::{Blockchain, Ledger};
   |                              ^^^^^^

warning: unused imports: `NetworkError` and `NetworkResult as Result`
 --> crates/network/src/shutdown_impl.rs:6:13
  |
6 | use crate::{NetworkError, NetworkResult as Result, P2pNode, PeerManager, SyncManager};
  |             ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
 --> crates/network/src/shutdown_impl.rs:7:5
  |
7 | use neo_config::DEFAULT_NEO_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_RPC_PORT`
 --> crates/network/src/shutdown_impl.rs:8:5
  |
8 | use neo_config::DEFAULT_RPC_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_PORT`
 --> crates/network/src/shutdown_impl.rs:9:5
  |
9 | use neo_config::DEFAULT_TESTNET_PORT;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
  --> crates/network/src/shutdown_impl.rs:10:5
   |
10 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_core::UInt256`
 --> crates/network/src/snapshot_config.rs:6:5
  |
6 | use neo_core::UInt256;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::sleep`
  --> crates/network/src/sync.rs:23:5
   |
23 | use tokio::time::sleep;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused variable: `block_hash`
   --> crates/plugins/src/tokens_tracker.rs:429:35
    |
429 |     async fn process_block(&self, block_hash: &str, block_height: u32) -> ExtensionResult<()> {
    |                                   ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_block_hash`

warning: unused import: `error`
  --> crates/network/src/transaction_relay.rs:17:22
   |
17 | use tracing::{debug, error, info, warn};
   |                      ^^^^^

warning: unused imports: `SafeError`, `SafeExpect`, and `SafeUnwrap`
 --> crates/network/src/safe_p2p.rs:7:37
  |
7 | use neo_core::safe_error_handling::{SafeUnwrap, SafeExpect, SafeError};
  |                                     ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_NEO_PORT`
   --> crates/network/src/lib.rs:262:5
    |
262 | use neo_config::DEFAULT_NEO_PORT;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `neo_config::DEFAULT_TESTNET_RPC_PORT`
   --> crates/network/src/lib.rs:265:5
    |
265 | use neo_config::DEFAULT_TESTNET_RPC_PORT;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `db`
   --> crates/plugins/src/application_logs.rs:298:21
    |
298 |         if let Some(db) = self.db.clone() {
    |                     ^^ help: if this is intentional, prefix it with an underscore: `_db`

warning: unused variable: `timestamp`
   --> crates/network/src/p2p/local_test_framework.rs:206:17
    |
206 |                 timestamp,
    |                 ^^^^^^^^^ help: try ignoring the field: `timestamp: _`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `port`
   --> crates/network/src/p2p/local_test_framework.rs:207:17
    |
207 |                 port,
    |                 ^^^^ help: try ignoring the field: `port: _`

warning: unused variable: `user_agent`
   --> crates/network/src/p2p/local_test_framework.rs:209:17
    |
209 |                 user_agent,
    |                 ^^^^^^^^^^ help: try ignoring the field: `user_agent: _`

warning: unused variable: `node`
   --> crates/network/src/p2p/local_test_framework.rs:292:23
    |
292 |         for (address, node) in &self.nodes {
    |                       ^^^^ help: if this is intentional, prefix it with an underscore: `_node`

warning: unused variable: `address`
   --> crates/network/src/p2p/local_test_framework.rs:311:40
    |
311 |     async fn spawn_node_handler(&self, address: SocketAddr) {
    |                                        ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `router`
   --> crates/network/src/p2p/local_test_framework.rs:313:13
    |
313 |         let router = self.message_router.clone();
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_router`

warning: unused variable: `magic`
  --> crates/network/src/p2p/tasks.rs:83:9
   |
83 |         magic: u32,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_magic`

warning: constant `SECONDS_PER_HOUR` is never used
 --> crates/plugins/src/application_logs.rs:7:7
  |
7 | const SECONDS_PER_HOUR: u64 = 3600;
  |       ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: method `cleanup_old_entries` is never used
   --> crates/plugins/src/application_logs.rs:208:14
    |
85  | impl ApplicationLogsPlugin {
    | -------------------------- method in this implementation
...
208 |     async fn cleanup_old_entries(&self) -> ExtensionResult<()> {
    |              ^^^^^^^^^^^^^^^^^^^

warning: constant `SECONDS_PER_HOUR` is never used
 --> crates/plugins/src/oracle_service.rs:7:7
  |
7 | const SECONDS_PER_HOUR: u64 = 3600;
  |       ^^^^^^^^^^^^^^^^

warning: type alias `Error` is never used
 --> crates/plugins/src/sqlite_wallet.rs:8:6
  |
8 | type Error = Box<dyn std::error::Error + Send + Sync>;
  |      ^^^^^

warning: type alias `Result` is never used
 --> crates/plugins/src/sqlite_wallet.rs:9:6
  |
9 | type Result<T> = std::result::Result<T, Error>;
  |      ^^^^^^

warning: field `data` is never read
  --> crates/plugins/src/sqlite_wallet.rs:28:5
   |
24 | pub struct SqliteWallet {
   |            ------------ field in this struct
...
28 |     data: Arc<RwLock<HashMap<String, String>>>,
   |     ^^^^
   |
   = note: `SqliteWallet` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `default_wallet_path` is never read
  --> crates/plugins/src/sqlite_wallet.rs:62:5
   |
58 | pub struct SqliteWalletPlugin {
   |            ------------------ field in this struct
...
62 |     default_wallet_path: Option<PathBuf>,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: `SqliteWalletPlugin` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: constant `ONE_MEGABYTE` is never used
 --> crates/plugins/src/state_service.rs:7:7
  |
7 | const ONE_MEGABYTE: usize = 1024 * 1024;
  |       ^^^^^^^^^^^^

warning: method `store_state_dump` is never used
   --> crates/plugins/src/state_service.rs:229:14
    |
83  | impl StateServicePlugin {
    | ----------------------- method in this implementation
...
229 |     async fn store_state_dump(&self, record: &StateDumpRecord) -> ExtensionResult<()> {
    |              ^^^^^^^^^^^^^^^^

warning: type alias `Error` is never used
 --> crates/plugins/src/storage_dumper.rs:7:6
  |
7 | type Error = Box<dyn std::error::Error + Send + Sync>;
  |      ^^^^^

warning: type alias `Result` is never used
 --> crates/plugins/src/storage_dumper.rs:8:6
  |
8 | type Result<T> = std::result::Result<T, Error>;
  |      ^^^^^^

warning: type alias `Error` is never used
 --> crates/plugins/src/tokens_tracker.rs:7:6
  |
7 | type Error = Box<dyn std::error::Error + Send + Sync>;
  |      ^^^^^

warning: type alias `Result` is never used
 --> crates/plugins/src/tokens_tracker.rs:8:6
  |
8 | type Result<T> = std::result::Result<T, Error>;
  |      ^^^^^^

warning: methods `store_transfer`, `store_token_info`, and `update_balance` are never used
   --> crates/plugins/src/tokens_tracker.rs:153:14
    |
110 | impl TokensTrackerPlugin {
    | ------------------------ methods in this implementation
...
153 |     async fn store_transfer(&self, transfer: &TokenTransfer) -> ExtensionResult<()> {
    |              ^^^^^^^^^^^^^^
...
196 |     async fn store_token_info(&self, token_info: &TokenInfo) -> ExtensionResult<()> {
    |              ^^^^^^^^^^^^^^^^
...
213 |     async fn update_balance(&self, balance: &TokenBalance) -> ExtensionResult<()> {
    |              ^^^^^^^^^^^^^^

warning: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do
   --> crates/plugins/src/application_logs.rs:109:49
    |
109 |     async fn init_database(&mut self, data_dir: &PathBuf) -> ExtensionResult<()> {
    |                                                 ^^^^^^^^ help: change this to: `&Path`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
    = note: `-W clippy::ptr-arg` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::ptr_arg)]`

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> crates/plugins/src/oracle_service.rs:554:9
    |
554 | /         match event {
555 | |             PluginEvent::Custom { event_type, data } => {
556 | |                 if event_type == "oracle_request" {
557 | |                     if let Ok(request) = serde_json::from_value::<OracleRequest>(data.clone()) {
...   |
562 | |             _ => {}
563 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
    = note: `-W clippy::single-match` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::single_match)]`
help: try
    |
554 ~         if let PluginEvent::Custom { event_type, data } = event {
555 +             if event_type == "oracle_request" {
556 +                 if let Ok(request) = serde_json::from_value::<OracleRequest>(data.clone()) {
557 +                     self.process_oracle_request(request).await?;
558 +                 }
559 +             }
560 +         }
    |

warning: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do
   --> crates/plugins/src/state_service.rs:108:49
    |
108 |     async fn init_database(&mut self, data_dir: &PathBuf) -> ExtensionResult<()> {
    |                                                 ^^^^^^^^ help: change this to: `&Path`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: variable does not need to be mutable
   --> crates/network/src/p2p_node.rs:514:21
    |
514 |         if let Some(mut peer_info) = self.peers.write().await.get_mut(&peer) {
    |                     ----^^^^^^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> crates/plugins/src/state_service.rs:447:9
    |
447 | /         match event {
448 | |             PluginEvent::BlockReceived {
449 | |                 block_hash,
450 | |                 block_height,
...   |
454 | |             _ => {}
455 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try
    |
447 ~         if let PluginEvent::BlockReceived {
448 +                 block_hash,
449 +                 block_height,
450 +             } = event {
451 +             self.process_block(block_hash, *block_height).await?;
452 +         }
    |

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:147:26
    |
147 |                 .map_err(|e| ExtensionError::IoError(e))?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
    = note: `-W clippy::redundant-closure` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::redundant_closure)]`

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:246:22
    |
246 |             .map_err(|e| ExtensionError::IoError(e))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:256:30
    |
256 |                     .map_err(|e| ExtensionError::IoError(e))?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:264:30
    |
264 |                     .map_err(|e| ExtensionError::IoError(e))?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:274:22
    |
274 |             .map_err(|e| ExtensionError::IoError(e))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:291:22
    |
291 |             .map_err(|e| ExtensionError::IoError(e))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:303:30
    |
303 |                     .map_err(|e| ExtensionError::IoError(e))?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:337:22
    |
337 |             .map_err(|e| ExtensionError::IoError(e))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: redundant closure
   --> crates/plugins/src/storage_dumper.rs:343:22
    |
343 |             .map_err(|e| ExtensionError::IoError(e))?
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `ExtensionError::IoError`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: unused variable: `message_handler`
   --> crates/network/src/p2p_node.rs:726:29
    |
726 |                         let message_handler = message_handler.clone();
    |                             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_message_handler`

warning: unused variable: `e`
   --> crates/network/src/peer_manager.rs:781:20
    |
781 |         if let Err(e) = stream.write_all(&version_bytes).await {
    |                    ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `e`
   --> crates/network/src/peer_manager.rs:822:20
    |
822 |         if let Err(e) = stream.write_all(&verack_bytes).await {
    |                    ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do
   --> crates/plugins/src/tokens_tracker.rs:135:49
    |
135 |     async fn init_database(&mut self, data_dir: &PathBuf) -> ExtensionResult<()> {
    |                                                 ^^^^^^^^ help: change this to: `&Path`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unused variable: `n`
    --> crates/network/src/peer_manager.rs:2025:13
     |
2025 |         let n = stream.read_exact(&mut initial_bytes).await.map_err(|e| {
     |             ^ help: if this is intentional, prefix it with an underscore: `_n`

warning: `neo-plugins` (lib) generated 58 warnings (run `cargo clippy --fix --lib -p neo-plugins` to apply 38 suggestions)
warning: unused variable: `peer_manager`
   --> crates/network/src/p2p_node.rs:813:13
    |
813 |         let peer_manager = self.peer_manager.clone();
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_peer_manager`

warning: unused variable: `event_sender`
    --> crates/network/src/p2p_node.rs:1045:13
     |
1045 |         let event_sender = self.event_sender.clone();
     |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_event_sender`

warning: unused variable: `peer_manager_clone`
    --> crates/network/src/p2p_node.rs:1079:13
     |
1079 |         let peer_manager_clone = peer_manager.clone();
     |             ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_peer_manager_clone`

warning: unused variable: `stats`
   --> crates/network/src/peer_manager.rs:239:13
    |
239 |         let stats = Arc::clone(&self.connection_stats);
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_stats`

warning: unused variable: `message_tx_clone`
   --> crates/network/src/peer_manager.rs:293:13
    |
293 |         let message_tx_clone = message_tx.clone();
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_message_tx_clone`

warning: unused variable: `e`
    --> crates/network/src/peer_manager.rs:1395:20
     |
1395 |         if let Err(e) = stream.write_all(&verack_bytes).await {
     |                    ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `path`
   --> crates/network/src/sync.rs:750:43
    |
750 |     async fn extract_zstd_snapshot(&self, path: &str, height: u32) -> NetworkResult<()> {
    |                                           ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `height`
   --> crates/network/src/sync.rs:750:55
    |
750 |     async fn extract_zstd_snapshot(&self, path: &str, height: u32) -> NetworkResult<()> {
    |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `path`
   --> crates/network/src/sync.rs:759:43
    |
759 |     async fn extract_gzip_snapshot(&self, path: &str, height: u32) -> NetworkResult<()> {
    |                                           ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `height`
   --> crates/network/src/sync.rs:759:55
    |
759 |     async fn extract_gzip_snapshot(&self, path: &str, height: u32) -> NetworkResult<()> {
    |                                                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `peer`
   --> crates/network/src/peer_manager.rs:359:13
    |
359 |         let peer = match self.peers.write().await.remove(&address) {
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_peer`

warning: unused variable: `address`
   --> crates/network/src/peer_manager.rs:468:39
    |
468 |     pub async fn complete_ping(&self, address: SocketAddr, nonce: u32) -> Option<u64> {
    |                                       ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `nonce`
   --> crates/network/src/peer_manager.rs:468:60
    |
468 |     pub async fn complete_ping(&self, address: SocketAddr, nonce: u32) -> Option<u64> {
    |                                                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_nonce`

warning: unused variable: `event_sender`
    --> crates/network/src/peer_manager.rs:2706:13
     |
2706 |         let event_sender = self.event_sender.clone();
     |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_event_sender`

warning: unused variable: `reason`
   --> crates/network/src/peers.rs:382:62
    |
382 |     pub async fn disconnect_peer(&self, address: SocketAddr, reason: String) -> Option<Peer> {
    |                                                              ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `state`
   --> crates/network/src/rpc.rs:842:5
    |
842 |     state: &RpcState,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `rpc_server`
   --> crates/network/src/server.rs:347:21
    |
347 |         if let Some(rpc_server) = &self.rpc_server {
    |                     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rpc_server`

warning: unused variable: `sync_manager`
   --> crates/network/src/server.rs:435:13
    |
435 |         let sync_manager = self.sync_manager.clone();
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sync_manager`

warning: variable does not need to be mutable
  --> crates/network/src/safe_p2p.rs:82:9
   |
82 |         mut command_receiver: mpsc::Receiver<crate::NetworkCommand>
   |         ----^^^^^^^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `msg`
   --> crates/network/src/error.rs:656:32
    |
656 |             crate::Error::Peer(msg) => NetworkError::peer_not_connected(
    |                                ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `msg`
   --> crates/network/src/error.rs:663:35
    |
663 |             crate::Error::Timeout(msg) => NetworkError::connection_timeout(
    |                                   ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `msg`
   --> crates/network/src/error.rs:675:37
    |
675 |             crate::Error::RateLimit(msg) => NetworkError::rate_limit_exceeded(
    |                                     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `protocol_message`
  --> crates/network/src/handlers/transaction_handler.rs:33:13
   |
33 |         let protocol_message = match &message.payload {
   |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_protocol_message`

warning: unused variable: `checksum`
   --> crates/network/src/messages/network.rs:305:13
    |
305 |         let checksum = u32::from_le_bytes([bytes[20], bytes[21], bytes[22], bytes[23]]);
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_checksum`

warning: unused variable: `timestamp`
   --> crates/network/src/messages/validation.rs:250:9
    |
250 |         timestamp: u64,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_timestamp`

warning: unused variable: `relay`
   --> crates/network/src/messages/validation.rs:255:9
    |
255 |         relay: bool,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_relay`

warning: unused variable: `hash_stop`
   --> crates/network/src/messages/validation.rs:489:9
    |
489 |         hash_stop: &UInt256,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hash_stop`

warning: unused variable: `i`
   --> crates/network/src/messages/validation.rs:666:14
    |
666 |         for (i, item) in inventory.iter().enumerate() {
    |              ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `command_sender`
   --> crates/network/src/server.rs:186:14
    |
186 |         let (command_sender, command_receiver) = tokio::sync::mpsc::channel(100);
    |              ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_command_sender`

warning: unused variable: `context`
   --> crates/network/src/safe_p2p.rs:182:46
    |
182 |     pub fn validate_size(&self, size: usize, context: &str) -> Result<()> {
    |                                              ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: `neo-network` (lib) generated 100 warnings
error: could not compile `neo-network` (lib) due to 3 previous errors; 100 warnings emitted
