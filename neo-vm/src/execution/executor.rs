// Copyright @ 2023 - 2024, R3E Network
// All Rights Reserved

use crate::execution::*;

// pub struct ExecOutput {
//     // nothing
// }

pub type Executor = fn(cx: &mut ExecContext, op: &Op) -> Result<(), ExecError>;

fn exec_invalid_opcode<const N: u8>(_cx: &mut ExecContext, op: &Op) -> Result<(), ExecError> {
    Err(ExecError::InvalidOpCode(op.ip, N))
}

#[allow(unused)]
pub(crate) const EXECUTORS: [Executor; 256] = [
    exec_push_int,               // PushInt8, 0x00, 00
    exec_push_int,               // PushInt16, 0x01, 01
    exec_push_int,               // PushInt32, 0x02, 02
    exec_push_int,               // PushInt64, 0x03, 03
    exec_push_int128,            // PushInt128, 0x04, 04
    exec_push_int256,            // PushInt256, 0x05, 05
    exec_invalid_opcode::<0x06>, // Reserved, 0x06, 06
    exec_invalid_opcode::<0x07>, // Reserved, 0x07, 07
    exec_invalid_opcode::<0x08>, // PushTrue, 0x08, 08
    exec_invalid_opcode::<0x09>, // PushFalse, 0x09, 09
    exec_invalid_opcode::<0x0A>, // PushA, 0x0A, 10
    exec_invalid_opcode::<0x0B>, // PushNull, 0x0B, 11
    exec_invalid_opcode::<0x0C>, // PushData1, 0x0C, 12
    exec_invalid_opcode::<0x0D>, // PushData2, 0x0D, 13
    exec_invalid_opcode::<0x0E>, // PushData4, 0x0E, 14
    exec_invalid_opcode::<0x0F>, // PushM1, 0x0F, 15
    exec_invalid_opcode::<0x10>, // Push0, 0x10, 16
    exec_invalid_opcode::<0x11>, // Push1, 0x11, 17
    exec_invalid_opcode::<0x12>, // Push2, 0x12, 18
    exec_invalid_opcode::<0x13>, // Push3, 0x13, 19
    exec_invalid_opcode::<0x14>, // Push4, 0x14, 20
    exec_invalid_opcode::<0x15>, // Push5, 0x15, 21
    exec_invalid_opcode::<0x16>, // Push6, 0x16, 22
    exec_invalid_opcode::<0x17>, // Push7, 0x17, 23
    exec_invalid_opcode::<0x18>, // Push8, 0x18, 24
    exec_invalid_opcode::<0x19>, // Push9, 0x19, 25
    exec_invalid_opcode::<0x1A>, // Push10, 0x1A, 26
    exec_invalid_opcode::<0x1B>, // Push11, 0x1B, 27
    exec_invalid_opcode::<0x1C>, // Push12, 0x1C, 28
    exec_invalid_opcode::<0x1D>, // Push13, 0x1D, 29
    exec_invalid_opcode::<0x1E>, // Push14, 0x1E, 30
    exec_invalid_opcode::<0x1F>, // Push15, 0x1F, 31
    exec_invalid_opcode::<0x20>, // Push16, 0x20, 32
    |_cx, _op| Ok(()),           // Nop, 0x21, 33
    exec_jmp,                    // Jmp, 0x22, 34
    exec_invalid_opcode::<0x23>, // JmpL, 0x23, 35
    exec_invalid_opcode::<0x24>, // JmpIf, 0x24, 36
    exec_invalid_opcode::<0x25>, // JmpIfL, 0x25, 37
    exec_invalid_opcode::<0x26>, // JmpIfNot, 0x26, 38
    exec_invalid_opcode::<0x27>, // JmpIfNotL, 0x27, 39
    exec_invalid_opcode::<0x28>, // JmpEq, 0x28, 40
    exec_invalid_opcode::<0x29>, // JmpEqL, 0x29, 41
    exec_invalid_opcode::<0x2A>, // JmpNe, 0x2A, 42
    exec_invalid_opcode::<0x2B>, // JmpNeL, 0x2B, 43
    exec_invalid_opcode::<0x2C>, // JmpGt, 0x2C, 44
    exec_invalid_opcode::<0x2D>, // JmpGtL, 0x2D, 45
    exec_invalid_opcode::<0x2E>, // JmpGe, 0x2E, 46
    exec_invalid_opcode::<0x2F>, // JmpGeL, 0x2F, 47
    exec_invalid_opcode::<0x30>, // JmpLt, 0x30, 48
    exec_invalid_opcode::<0x31>, // JmpLtL, 0x31, 49
    exec_invalid_opcode::<0x32>, // JmpLe, 0x32, 50
    exec_invalid_opcode::<0x33>, // JmpLeL, 0x33, 51
    exec_invalid_opcode::<0x34>, // Call, 0x34, 52
    exec_invalid_opcode::<0x35>, // CallL, 0x35, 53
    exec_invalid_opcode::<0x36>, // CallA, 0x36, 54
    exec_invalid_opcode::<0x37>, // CallT, 0x37, 55
    exec_invalid_opcode::<0x38>, // Abort, 0x38, 56
    exec_invalid_opcode::<0x39>, // Assert, 0x39, 57
    exec_invalid_opcode::<0x3A>, // Throw, 0x3A, 58
    exec_invalid_opcode::<0x3B>, // Try, 0x3B, 59
    exec_invalid_opcode::<0x3C>, // TryL, 0x3C, 60
    exec_invalid_opcode::<0x3D>, // EndTry, 0x3D, 61
    exec_invalid_opcode::<0x3E>, // EndTryL, 0x3E, 62
    exec_invalid_opcode::<0x3F>, // EndFinally, 0x3F, 63
    exec_invalid_opcode::<0x40>, // Return, 0x40, 64
    exec_invalid_opcode::<0x41>, // Syscall, 0x41, 65
    exec_invalid_opcode::<0x42>, // Reserved, 0x42, 66
    exec_depth,                  // Depth, 0x43, 67
    exec_invalid_opcode::<0x44>, // Reserved, 0x44, 68
    exec_drop,                   // Drop, 0x45, 69
    exec_invalid_opcode::<0x46>, // Nip, 0x46, 70
    exec_invalid_opcode::<0x47>, // Reserved, 0x47, 71
    exec_invalid_opcode::<0x48>, // Xdrop, 0x48, 72
    exec_invalid_opcode::<0x49>, // Clear, 0x49, 73
    exec_invalid_opcode::<0x4A>, // Dup, 0x4A, 74
    exec_invalid_opcode::<0x4B>, // Over, 0x4B, 75
    exec_invalid_opcode::<0x4C>, // Reserved, 0x4C, 76
    exec_invalid_opcode::<0x4D>, // Pick, 0x4D, 77
    exec_invalid_opcode::<0x4E>, // Tuck, 0x4E, 78
    exec_invalid_opcode::<0x4F>, // Reserved, 0x4F, 79
    exec_invalid_opcode::<0x50>, // Swap, 0x50, 80
    exec_invalid_opcode::<0x51>, // Rotate, 0x51, 81
    exec_invalid_opcode::<0x52>, // Roll, 0x52, 82
    exec_invalid_opcode::<0x53>, // Reverse3, 0x53, 83
    exec_invalid_opcode::<0x54>, // Reverse4, 0x54, 84
    exec_invalid_opcode::<0x55>, // ReverseN, 0x55, 85
    exec_init_sslot,             // InitSSLot, 0x56, 86
    exec_init_slot,              // InitSlot, 0x57, 87
    exec_load_static_n::<0x00>,  // LdSFLd0, 0x58, 88
    exec_load_static_n::<0x01>,  // LdSFLd1, 0x59, 89
    exec_load_static_n::<0x02>,  // LdSFLd2, 0x5A, 90
    exec_load_static_n::<0x03>,  // LdSFLd3, 0x5B, 91
    exec_load_static_n::<0x04>,  // LdSFLd4, 0x5C, 92
    exec_load_static_n::<0x05>,  // LdSFLd5, 0x5D, 93
    exec_load_static_n::<0x06>,  // LdSFLd6, 0x5E, 94
    exec_load_static,            // LdSFLd, 0x5F, 95
    exec_invalid_opcode::<0x60>, // StSFLd0, 0x60, 96
    exec_invalid_opcode::<0x61>, // StSFLd1, 0x61, 97
    exec_invalid_opcode::<0x62>, // StSFLd2, 0x62, 98
    exec_invalid_opcode::<0x63>, // StSFLd3, 0x63, 99
    exec_invalid_opcode::<0x64>, // StSFLd4, 0x64, 100
    exec_invalid_opcode::<0x65>, // StSFLd5, 0x65, 101
    exec_invalid_opcode::<0x66>, // StSFLd6, 0x66, 102
    exec_invalid_opcode::<0x67>, // StSFLd, 0x67, 103
    exec_invalid_opcode::<0x68>, // LdLoc0, 0x68, 104
    exec_invalid_opcode::<0x69>, // LdLoc1, 0x69, 105
    exec_invalid_opcode::<0x6A>, // LdLoc2, 0x6A, 106
    exec_invalid_opcode::<0x6B>, // LdLoc3, 0x6B, 107
    exec_invalid_opcode::<0x6C>, // LdLoc4, 0x6C, 108
    exec_invalid_opcode::<0x6D>, // LdLoc5, 0x6D, 109
    exec_invalid_opcode::<0x6E>, // LdLoc6, 0x6E, 110
    exec_invalid_opcode::<0x6F>, // LdLoc, 0x6F, 111
    exec_invalid_opcode::<0x70>, // StLoc0, 0x70, 112
    exec_invalid_opcode::<0x71>, // StLoc1, 0x71, 113
    exec_invalid_opcode::<0x72>, // StLoc2, 0x72, 114
    exec_invalid_opcode::<0x73>, // StLoc3, 0x73, 115
    exec_invalid_opcode::<0x74>, // StLoc4, 0x74, 116
    exec_invalid_opcode::<0x75>, // StLoc5, 0x75, 117
    exec_invalid_opcode::<0x76>, // StLoc6, 0x76, 118
    exec_invalid_opcode::<0x77>, // StLoc, 0x77, 119
    exec_invalid_opcode::<0x78>, // LdArg0, 0x78, 120
    exec_invalid_opcode::<0x79>, // LdArg1, 0x79, 121
    exec_invalid_opcode::<0x7A>, // LdArg2, 0x7A, 122
    exec_invalid_opcode::<0x7B>, // LdArg3, 0x7B, 123
    exec_invalid_opcode::<0x7C>, // LdArg4, 0x7C, 124
    exec_invalid_opcode::<0x7D>, // LdArg5, 0x7D, 125
    exec_invalid_opcode::<0x7E>, // LdArg6, 0x7E, 126
    exec_invalid_opcode::<0x7F>, // LdArg, 0x7F, 127
    exec_invalid_opcode::<0x80>, // StArg0, 0x80, 128
    exec_invalid_opcode::<0x81>, // StArg1, 0x81, 129
    exec_invalid_opcode::<0x82>, // StArg2, 0x82, 130
    exec_invalid_opcode::<0x83>, // StArg3, 0x83, 131
    exec_invalid_opcode::<0x84>, // StArg4, 0x84, 132
    exec_invalid_opcode::<0x85>, // StArg5, 0x85, 133
    exec_invalid_opcode::<0x86>, // StArg6, 0x86, 134
    exec_invalid_opcode::<0x87>, // StArg, 0x87, 135
    exec_invalid_opcode::<0x88>, // NewBuffer, 0x88, 136
    exec_invalid_opcode::<0x89>, // MemCpy, 0x89, 137
    exec_invalid_opcode::<0x8A>, // Reserved, 0x8A, 138
    exec_invalid_opcode::<0x8B>, // Cat, 0x8B, 139
    exec_invalid_opcode::<0x8C>, // SubStr, 0x8C, 140
    exec_invalid_opcode::<0x8D>, // Left, 0x8D, 141
    exec_invalid_opcode::<0x8E>, // Right, 0x8E, 142
    exec_invalid_opcode::<0x8F>, // Reserved, 0x8F, 143
    exec_invert,                 // Invert, 0x90, 144
    exec_invalid_opcode::<0x91>, // And, 0x91, 145
    exec_invalid_opcode::<0x92>, // Or, 0x92, 146
    exec_invalid_opcode::<0x93>, // Xor, 0x93, 147
    exec_invalid_opcode::<0x94>, // Reserved, 0x94, 148
    exec_invalid_opcode::<0x95>, // Reserved, 0x95, 149
    exec_invalid_opcode::<0x96>, // Reserved, 0x96, 150
    exec_invalid_opcode::<0x97>, // Equal, 0x97, 151
    exec_invalid_opcode::<0x98>, // NotEqual, 0x98, 152
    exec_sign,                   // Sign, 0x99, 153
    exec_invalid_opcode::<0x9A>, // Abs, 0x9A, 154
    exec_invalid_opcode::<0x9B>, // Negate, 0x9B, 155
    exec_invalid_opcode::<0x9C>, // Inc, 0x9C, 156
    exec_invalid_opcode::<0x9D>, // Dec, 0x9D, 157
    exec_invalid_opcode::<0x9E>, // Add, 0x9E, 158
    exec_invalid_opcode::<0x9F>, // Sub, 0x9F, 159
    exec_invalid_opcode::<0xA0>, // Mul, 0xA0, 160
    exec_invalid_opcode::<0xA1>, // Div, 0xA1, 161
    exec_invalid_opcode::<0xA2>, // Mod, 0xA2, 162
    exec_invalid_opcode::<0xA3>, // Pow, 0xA3, 163
    exec_invalid_opcode::<0xA4>, // Sqrt, 0xA4, 164
    exec_invalid_opcode::<0xA5>, // ModMul, 0xA5, 165
    exec_invalid_opcode::<0xA6>, // ModPow, 0xA6, 166
    exec_invalid_opcode::<0xA7>, // Reserved, 0xA7, 167
    exec_invalid_opcode::<0xA8>, // Shl, 0xA8, 168
    exec_invalid_opcode::<0xA9>, // Shr, 0xA9, 169
    exec_invalid_opcode::<0xAA>, // Not, 0xAA, 170
    exec_invalid_opcode::<0xAB>, // BoolAnd, 0xAB, 171
    exec_invalid_opcode::<0xAC>, // BoolOr, 0xAC, 172
    exec_invalid_opcode::<0xAD>, // Reserved, 0xAD, 173
    exec_invalid_opcode::<0xAE>, // Reserved, 0xAE, 174
    exec_invalid_opcode::<0xAF>, // Reserved, 0xAF, 175
    exec_invalid_opcode::<0xB0>, // Reserved, 0xB0, 176
    exec_invalid_opcode::<0xB1>, // Nz, 0xB1, 177
    exec_invalid_opcode::<0xB2>, // Reserved, 0xB2, 178
    exec_invalid_opcode::<0xB3>, // NumEqual, 0xB3, 179
    exec_invalid_opcode::<0xB4>, // NumNotEqual, 0xB4, 180
    exec_invalid_opcode::<0xB5>, // Lt, 0xB5, 181
    exec_invalid_opcode::<0xB6>, // Le, 0xB6, 182
    exec_invalid_opcode::<0xB7>, // Gt, 0xB7, 183
    exec_invalid_opcode::<0xB8>, // Ge, 0xB8, 184
    exec_invalid_opcode::<0xB9>, // Min, 0xB9, 185
    exec_invalid_opcode::<0xBA>, // Max, 0xBA, 186
    exec_invalid_opcode::<0xBB>, // Within, 0xBB, 187
    exec_invalid_opcode::<0xBC>, // Reserved, 0xBC, 188
    exec_invalid_opcode::<0xBD>, // Reserved, 0xBD, 189
    exec_pack_map,               // PackMap, 0xBE, 190
    exec_invalid_opcode::<0xBF>, // PackStruct, 0xBF, 191
    exec_invalid_opcode::<0xC0>, // Pack, 0xC0, 192
    exec_invalid_opcode::<0xC1>, // Unpack, 0xC1, 193
    exec_invalid_opcode::<0xC2>, // NewArray0, 0xC2, 194
    exec_invalid_opcode::<0xC3>, // NewArray, 0xC3, 195
    exec_invalid_opcode::<0xC4>, // NewArrayT, 0xC4, 196
    exec_invalid_opcode::<0xC5>, // NewStruct0, 0xC5, 197
    exec_invalid_opcode::<0xC6>, // NewStruct, 0xC6, 198
    exec_invalid_opcode::<0xC7>, // Reserved, 0xC7, 199
    exec_invalid_opcode::<0xC8>, // NewMap, 0xC8, 200
    exec_invalid_opcode::<0xC9>, // Reserved, 0xC9, 201
    exec_invalid_opcode::<0xCA>, // Size, 0xCA, 202
    exec_invalid_opcode::<0xCB>, // HasKey, 0xCB, 203
    exec_invalid_opcode::<0xCC>, // Keys, 0xCC, 204
    exec_invalid_opcode::<0xCD>, // Values, 0xCD, 205
    exec_invalid_opcode::<0xCE>, // PickItem, 0xCE, 206
    exec_invalid_opcode::<0xCF>, // Append, 0xCF, 207
    exec_invalid_opcode::<0xD0>, // SetItem, 0xD0, 208
    exec_invalid_opcode::<0xD1>, // ReverseItems, 0xD1, 209
    exec_invalid_opcode::<0xD2>, // Remove, 0xD2, 210
    exec_invalid_opcode::<0xD3>, // ClearItems, 0xD3, 211
    exec_invalid_opcode::<0xD4>, // PopItem, 0xD4, 212
    exec_invalid_opcode::<0xD5>, // Reserved, 0xD5, 213
    exec_invalid_opcode::<0xD6>, // Reserved, 0xD6, 214
    exec_invalid_opcode::<0xD7>, // Reserved, 0xD7, 215
    exec_is_null,                // IsNull, 0xD8, 216
    exec_invalid_opcode::<0xD9>, // IsType, 0xD9, 217
    exec_invalid_opcode::<0xDA>, // Reserved, 0xDA, 218
    exec_invalid_opcode::<0xDB>, // Convert, 0xDB, 219
    exec_invalid_opcode::<0xDC>, // Reserved, 0xDC, 220
    exec_invalid_opcode::<0xDD>, // Reserved, 0xDD, 221
    exec_invalid_opcode::<0xDE>, // Reserved, 0xDE, 222
    exec_invalid_opcode::<0xDF>, // Reserved, 0xDF, 223
    exec_invalid_opcode::<0xE0>, // AbortMsg, 0xE0, 224
    exec_invalid_opcode::<0xE1>, // AssertMsg, 0xE1, 225
    exec_invalid_opcode::<0xE2>, // Reserved, 0xE2, 226
    exec_invalid_opcode::<0xE3>, // Reserved, 0xE3, 227
    exec_invalid_opcode::<0xE4>, // Reserved, 0xE4, 228
    exec_invalid_opcode::<0xE5>, // Reserved, 0xE5, 229
    exec_invalid_opcode::<0xE6>, // Reserved, 0xE6, 230
    exec_invalid_opcode::<0xE7>, // Reserved, 0xE7, 231
    exec_invalid_opcode::<0xE8>, // Reserved, 0xE8, 232
    exec_invalid_opcode::<0xE9>, // Reserved, 0xE9, 233
    exec_invalid_opcode::<0xEA>, // Reserved, 0xEA, 234
    exec_invalid_opcode::<0xEB>, // Reserved, 0xEB, 235
    exec_invalid_opcode::<0xEC>, // Reserved, 0xEC, 236
    exec_invalid_opcode::<0xED>, // Reserved, 0xED, 237
    exec_invalid_opcode::<0xEE>, // Reserved, 0xEE, 238
    exec_invalid_opcode::<0xEF>, // Reserved, 0xEF, 239
    exec_invalid_opcode::<0xF0>, // Reserved, 0xF0, 240
    exec_invalid_opcode::<0xF1>, // Reserved, 0xF1, 241
    exec_invalid_opcode::<0xF2>, // Reserved, 0xF2, 242
    exec_invalid_opcode::<0xF3>, // Reserved, 0xF3, 243
    exec_invalid_opcode::<0xF4>, // Reserved, 0xF4, 244
    exec_invalid_opcode::<0xF5>, // Reserved, 0xF5, 245
    exec_invalid_opcode::<0xF6>, // Reserved, 0xF6, 246
    exec_invalid_opcode::<0xF7>, // Reserved, 0xF7, 247
    exec_invalid_opcode::<0xF8>, // Reserved, 0xF8, 248
    exec_invalid_opcode::<0xF9>, // Reserved, 0xF9, 249
    exec_invalid_opcode::<0xFA>, // Reserved, 0xFA, 250
    exec_invalid_opcode::<0xFB>, // Reserved, 0xFB, 251
    exec_invalid_opcode::<0xFC>, // Reserved, 0xFC, 252
    exec_invalid_opcode::<0xFD>, // Reserved, 0xFD, 253
    exec_invalid_opcode::<0xFE>, // Reserved, 0xFE, 254
    exec_invalid_opcode::<0xFF>, // Reserved, 0xFF, 255
];
